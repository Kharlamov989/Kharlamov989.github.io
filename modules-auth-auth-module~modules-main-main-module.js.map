{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./node_modules/angular-notifier/esm5/angular-notifier.js","webpack:///./node_modules/angular-notifier/esm5/index.js","webpack:///./node_modules/angular-notifier/esm5/src/animation-presets/fade.animation-preset.js","webpack:///./node_modules/angular-notifier/esm5/src/animation-presets/slide.animation-preset.js","webpack:///./node_modules/angular-notifier/esm5/src/components/notifier-container.component.js","webpack:///./node_modules/angular-notifier/esm5/src/components/notifier-notification.component.js","webpack:///./node_modules/angular-notifier/esm5/src/models/notifier-config.model.js","webpack:///./node_modules/angular-notifier/esm5/src/models/notifier-notification.model.js","webpack:///./node_modules/angular-notifier/esm5/src/notifier.module.js","webpack:///./node_modules/angular-notifier/esm5/src/services/notifier-animation.service.js","webpack:///./node_modules/angular-notifier/esm5/src/services/notifier-queue.service.js","webpack:///./node_modules/angular-notifier/esm5/src/services/notifier-timer.service.js","webpack:///./node_modules/angular-notifier/esm5/src/services/notifier.service.js","webpack:///./src/app/core/custom-http-params.ts","webpack:///./src/app/shared/components/action-button/action-button.component.ts","webpack:///./src/app/shared/components/grid/components/filter/filter.component.html","webpack:///./src/app/shared/components/grid/components/filter/filter.component.ts","webpack:///./src/app/shared/components/grid/components/filter/filter.data.service.ts","webpack:///./src/app/shared/components/grid/components/filter/filter.service.ts","webpack:///./src/app/shared/components/grid/components/filter/index.ts","webpack:///./src/app/shared/components/grid/components/grid/grid.component.html","webpack:///./src/app/shared/components/grid/components/grid/grid.component.scss","webpack:///./src/app/shared/components/grid/components/grid/grid.component.ts","webpack:///./src/app/shared/components/grid/components/grid/index.ts","webpack:///./src/app/shared/components/grid/components/grid/template.provider.ts","webpack:///./src/app/shared/components/grid/components/grid/template.wrapper.ts","webpack:///./src/app/shared/components/grid/components/index.ts","webpack:///./src/app/shared/components/grid/components/pagination/index.ts","webpack:///./src/app/shared/components/grid/components/pagination/pagination.component.html","webpack:///./src/app/shared/components/grid/components/pagination/pagination.component.ts","webpack:///./src/app/shared/components/grid/grid.module.ts","webpack:///./src/app/shared/components/grid/index.ts","webpack:///./src/app/shared/components/grid/models/data.ts","webpack:///./src/app/shared/components/grid/models/index.ts","webpack:///./src/app/shared/components/grid/services/data.service.ts","webpack:///./src/app/shared/components/grid/services/index.ts","webpack:///./src/app/shared/components/grid/templates/account-date.template.ts","webpack:///./src/app/shared/components/grid/templates/account-labels.template.ts","webpack:///./src/app/shared/components/grid/templates/accounts-detail.template.ts","webpack:///./src/app/shared/components/grid/templates/accounts.template.ts","webpack:///./src/app/shared/components/grid/templates/action.template.ts","webpack:///./src/app/shared/components/grid/templates/bot-status.template.ts","webpack:///./src/app/shared/components/grid/templates/date.template.ts","webpack:///./src/app/shared/components/grid/templates/description.template.ts","webpack:///./src/app/shared/components/grid/templates/detail.template.ts","webpack:///./src/app/shared/components/grid/templates/end-date.template.ts","webpack:///./src/app/shared/components/grid/templates/index.ts","webpack:///./src/app/shared/components/grid/templates/labels.template.ts","webpack:///./src/app/shared/components/grid/templates/member-status.template.ts","webpack:///./src/app/shared/components/grid/templates/owner-detail.template.ts","webpack:///./src/app/shared/components/grid/templates/owner-info.template.ts","webpack:///./src/app/shared/components/grid/templates/participant-info.template.ts","webpack:///./src/app/shared/components/grid/templates/participants.template.ts","webpack:///./src/app/shared/components/grid/templates/post-status.template.ts","webpack:///./src/app/shared/components/grid/templates/posts-template.ts","webpack:///./src/app/shared/components/grid/templates/repost-action.template.ts","webpack:///./src/app/shared/components/grid/utils/index.ts","webpack:///./src/app/shared/components/modal/modal.base.component.ts","webpack:///./src/app/shared/components/modal/model/modal-state.ts","webpack:///./src/app/shared/components/select-field/index.ts","webpack:///./src/app/shared/components/select-field/select-field.component.ts","webpack:///./src/app/shared/components/select-field/select-field.module.ts","webpack:///./src/app/shared/components/select-field/select-field.service.ts","webpack:///./src/app/shared/components/tabs/components/index.ts","webpack:///./src/app/shared/components/tabs/components/main-tabs/main.tabs.component.html","webpack:///./src/app/shared/components/tabs/components/main-tabs/main.tabs.component.ts","webpack:///./src/app/shared/components/tabs/components/tabs.base.component.ts","webpack:///./src/app/shared/components/tabs/service/index.ts","webpack:///./src/app/shared/components/tabs/service/tab.service.ts","webpack:///./src/app/shared/components/tabs/tab.module.ts","webpack:///./src/app/shared/notifier.config.ts","webpack:///./src/app/shared/shared.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEwC;AACF;AACjB;AACH;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA,SAAS;AACT;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mDAAmD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,sGAAwD,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yEAAyE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA,kBAAkB;AAClB,UAAU;AACV;AACA;AACA,UAAU;AACV,kDAAkD;AAClD,gDAAgD,YAAY;AAC5D,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA,kBAAkB;AAClB,UAAU;AACV;AACA;AACA,UAAU;AACV,kDAAkD;AAClD,gDAAgD,YAAY;AAC5D,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oFAAoF;AACtH;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4BAA4B;AACjF,uDAAuD,4BAA4B;AACnF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAywDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+CAA+C;AAC/C,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wDAAwD,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6CAA6C;AAC7C,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB,EAAE;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uCAAuC;AACxD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV,+DAA+D;AAC/D,kDAAkD;AAClD,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uCAAuC;AACxD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV,+DAA+D;AAC/D,kDAAkD;AAClD,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oDAAoD;AACtF;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,8CAA8C,qDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA,YAAY,cAAc,wDAAwD;AAClF;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,YAAY,cAAc,wDAAwD;AAClF;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC;AACvC,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AACjC,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,wDAAwD;AAClF;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,wDAAwD;AAClF;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC;AACxC,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AACjC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,6EAA6E;AACtG;AACA,yBAAyB,wDAAwD;AACjF,yBAAyB,0DAA0D;AACnF;AACA,yBAAyB,sEAAsE;AAC/F;AACA,iBAAiB;AACjB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,iFAAiF;AAC1G;AACA,yBAAyB,wDAAwD;AACjF,yBAAyB,0DAA0D;AACnF;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrxEA;AAAA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AAC0C;AACC;AACG;AACf;AACwG;AAC9F;AACJ;AACA;AACrC,4C;;;;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACyB;AACC;AAC1B,iC;;;;;;;;;;;;;ACNA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;AC7BA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAsB,EAAE;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;;;;;AChGA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACgE;AACjC;AACA;AACL;AAC1B;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,4EAA4E;AACrG,8DAA8D;AAC9D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,yEAAyE;AACzE;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,kFAAkF;AAClF,iBAAiB;AACjB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,oCAAoC,EAAE,kCAAkC,QAAQ;AAChF;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,oCAAoC,EAAE,kCAAkC,QAAQ;AAChF;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,gCAAgC,EAAE,iCAAiC,QAAQ;AAC3E;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uDAAuD,kDAAkD,EAAE;AAC3G,2CAA2C;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uEAAuE,kDAAkD,EAAE;AAC3H;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE,qFAAqF,kDAAkD,EAAE;AAClK;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iFAAiF,+BAA+B;AAChH,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D;AAC7D,SAAS,wEAA0B;AACnC,SAAS,8FAA6B;AACtC,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,wD;;;;;;;;;;;;;;;;;;ACnlBA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACiG;AAC9D;AACJ;AACL;AACK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,oCAAoC,EAAE,sCAAsC,QAAQ;AACpF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2EAA2E,wBAAwB;AACnG,iBAAiB,IAAI;AACrB;AACA;AACA,gEAAgE;AAChE,SAAS,iEAAmB;AAC5B,SAAS,gEAAkB;AAC3B,SAAS,mFAAwB;AACjC,SAAS,8FAA6B;AACtC,SAAS;AACT,MAAM;AACN;AACA,wBAAwB,4DAAc;AACtC,iBAAiB,6DAAe;AAChC,mBAAmB,6DAAe;AAClC;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,2D;;;;;;;;;;;;;;ACncA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,4BAAmC;AACnC;AACA,eAAe,YAAY;AAC3B;AACA,eAAe,YAAY;AAC3B;AACA,eAAe,YAAY;AAC3B;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iD;;;;;;;;;;;;;;AC7IA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAA+C;AAC/C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,uD;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACuB;AACY;AACE;AACG;AACf;AACU;AACJ;AACL;AAC1B;AACA;AACA;AACA,eAAsB,EAAE;AACxB;AACA;AACA;AACA,eAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,YAAY,EAAE;AACd;AACA;AACA,8FAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;AC7GA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACqB;AACN;AACC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,2DAA2D,WAAW;AACtE;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,sD;;;;;;;;;;;;;;;AChFA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACqB;AACH;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,gBAAgB;AAChB;AACA;AACA,+CAA+C;AAC/C,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kD;;;;;;;;;;;;;;AC3FA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kD;;;;;;;;;;;;;;;;;ACxHA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACyC;AAChB;AACM;AACD;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AAC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","file":"modules-auth-auth-module~modules-main-main-module.js","sourcesContent":["/**\n * @license Angular v6.0.3\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { __extends, __read, __spread } from 'tslib';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated use @angular/common/http instead\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = function () { return []; };\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated use @angular/common/http instead\n */\n/**\n * Supported http methods.\n * @deprecated use @angular/common/http instead\n */\nvar RequestMethod;\n/**\n * Supported http methods.\n * @deprecated use @angular/common/http instead\n */\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated use @angular/common/http instead\n */\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated use @angular/common/http instead\n */\nvar ReadyState;\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated use @angular/common/http instead\n */\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated use @angular/common/http instead\n */\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated use @angular/common/http instead\n */\nvar ResponseType;\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated use @angular/common/http instead\n */\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated use @angular/common/http instead\n */\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated use @angular/common/http instead\n */\nvar ContentType;\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated use @angular/common/http instead\n */\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated use @angular/common/http instead\n */\n/**\n * Define which buffer to use to store the response\n * @deprecated use @angular/common/http instead\n */\nvar ResponseContentType;\n/**\n * Define which buffer to use to store the response\n * @deprecated use @angular/common/http instead\n */\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    /**\n       * Returns a new Headers instance from the given DOMString of Response Headers\n       */\n    Headers.fromResponseHeaderString = /**\n       * Returns a new Headers instance from the given DOMString of Response Headers\n       */\n    function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    /**\n       * Appends a header to existing list of header values for a given header name.\n       */\n    Headers.prototype.append = /**\n       * Appends a header to existing list of header values for a given header name.\n       */\n    function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    /**\n       * Deletes all header values for the given name.\n       */\n    Headers.prototype.delete = /**\n       * Deletes all header values for the given name.\n       */\n    function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    /**\n       * Returns first header that matches given name.\n       */\n    Headers.prototype.get = /**\n       * Returns first header that matches given name.\n       */\n    function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    /**\n       * Checks for existence of header by given name.\n       */\n    Headers.prototype.has = /**\n       * Checks for existence of header by given name.\n       */\n    function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    /**\n       * Returns the names of the headers\n       */\n    Headers.prototype.keys = /**\n       * Returns the names of the headers\n       */\n    function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    /**\n       * Sets or overrides header value for given name.\n       */\n    Headers.prototype.set = /**\n       * Sets or overrides header value for given name.\n       */\n    function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    /**\n       * Returns values of all headers.\n       */\n    Headers.prototype.values = /**\n       * Returns values of all headers.\n       */\n    function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    /**\n       * Returns string of all headers.\n       */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = /**\n       * Returns string of all headers.\n       */\n    // TODO(vicb): returns {[name: string]: string[]}\n    function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    /**\n       * Returns list of header values for a given name.\n       */\n    Headers.prototype.getAll = /**\n       * Returns list of header values for a given name.\n       */\n    function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    /**\n       * This method is not implemented.\n       */\n    Headers.prototype.entries = /**\n       * This method is not implemented.\n       */\n    function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    /**\n       * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n       * override\n       * existing values. This method will not change the values of the instance on which it is being\n       * called.\n       *\n       * This may be useful when sharing a base `ResponseOptions` object inside tests,\n       * where certain properties may change from test to test.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n       *\n       * ```typescript\n       * import {ResponseOptions, Response} from '@angular/http';\n       *\n       * var options = new ResponseOptions({\n       *   body: {name: 'Jeff'}\n       * });\n       * var res = new Response(options.merge({\n       *   url: 'https://google.com'\n       * }));\n       * console.log('options.url:', options.url); // null\n       * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n       * console.log('res.url:', res.url); // https://google.com\n       * ```\n       */\n    ResponseOptions.prototype.merge = /**\n       * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n       * override\n       * existing values. This method will not change the values of the instance on which it is being\n       * called.\n       *\n       * This may be useful when sharing a base `ResponseOptions` object inside tests,\n       * where certain properties may change from test to test.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n       *\n       * ```typescript\n       * import {ResponseOptions, Response} from '@angular/http';\n       *\n       * var options = new ResponseOptions({\n       *   body: {name: 'Jeff'}\n       * });\n       * var res = new Response(options.merge({\n       *   url: 'https://google.com'\n       * }));\n       * console.log('options.url:', options.url); // null\n       * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n       * console.log('res.url:', res.url); // https://google.com\n       * ```\n       */\n    function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    BaseResponseOptions.ctorParameters = function () { return []; };\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated use @angular/common/http instead\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use @angular/common/http instead\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use @angular/common/http instead\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated use @angular/common/http instead\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use @angular/common/http instead\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = \n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = \n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = \n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) {\n                return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v));\n            });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    /**\n       * Attempts to return body as parsed `JSON` object, or raises an exception.\n       */\n    Body.prototype.json = /**\n       * Attempts to return body as parsed `JSON` object, or raises an exception.\n       */\n    function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    /**\n       * Returns the body as a string, presuming `toString()` can be called on the response body.\n       *\n       * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n       * bytes in the buffer will be interpreted. Valid values are:\n       *\n       * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n       *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n       *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n       *   into consideration. This is the default behavior to avoid breaking apps, but should be\n       *   considered deprecated.\n       *\n       * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n       */\n    Body.prototype.text = /**\n       * Returns the body as a string, presuming `toString()` can be called on the response body.\n       *\n       * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n       * bytes in the buffer will be interpreted. Valid values are:\n       *\n       * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n       *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n       *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n       *   into consideration. This is the default behavior to avoid breaking apps, but should be\n       *   considered deprecated.\n       *\n       * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n       */\n    function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    /**\n       * Return the body as an ArrayBuffer\n       */\n    Body.prototype.arrayBuffer = /**\n       * Return the body as an ArrayBuffer\n       */\n    function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    /**\n        * Returns the request's body as a Blob, assuming that body exists.\n        */\n    Body.prototype.blob = /**\n        * Returns the request's body as a Blob, assuming that body exists.\n        */\n    function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use @angular/common/http instead\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = (responseOptions.status);\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = (responseOptions.type);\n        _this.url = (responseOptions.url);\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = \n    // Construct a <script> element with the specified URL\n    function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = \n    // Attach the <script> element to the DOM\n    function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = \n    // Remove <script> element from the DOM\n    function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    BrowserJsonp.ctorParameters = function () { return []; };\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use @angular/common/http instead\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    /**\n       * Callback called when the JSONP request completes, to notify the application\n       * of the new data.\n       */\n    JSONPConnection.prototype.finished = /**\n       * Callback called when the JSONP request completes, to notify the application\n       * of the new data.\n       */\n    function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated use @angular/common/http instead\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    JSONPBackend.ctorParameters = function () { return [\n        { type: BrowserJsonp, },\n        { type: ResponseOptions, },\n    ]; };\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use @angular/common/http instead\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader((name), values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use @angular/common/http instead\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated use @angular/common/http instead\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    XHRBackend.ctorParameters = function () { return [\n        { type: BrowserXhr, },\n        { type: ResponseOptions, },\n        { type: XSRFStrategy, },\n    ]; };\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: /**\n           * @deprecated from 4.0.0. Use params instead.\n           */\n        function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: /**\n           * @deprecated from 4.0.0. Use params instead.\n           */\n        function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    /**\n       * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n       * existing values. This method will not change the values of the instance on which it is being\n       * called.\n       *\n       * Note that `headers` and `search` will override existing values completely if present in\n       * the `options` object. If these values should be merged, it should be done prior to calling\n       * `merge` on the `RequestOptions` instance.\n       *\n       * ```typescript\n       * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n       *\n       * const options = new RequestOptions({\n       *   method: RequestMethod.Post\n       * });\n       * const req = new Request(options.merge({\n       *   url: 'https://google.com'\n       * }));\n       * console.log('req.method:', RequestMethod[req.method]); // Post\n       * console.log('options.url:', options.url); // null\n       * console.log('req.url:', req.url); // https://google.com\n       * ```\n       */\n    RequestOptions.prototype.merge = /**\n       * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n       * existing values. This method will not change the values of the instance on which it is being\n       * called.\n       *\n       * Note that `headers` and `search` will override existing values completely if present in\n       * the `options` object. If these values should be merged, it should be done prior to calling\n       * `merge` on the `RequestOptions` instance.\n       *\n       * ```typescript\n       * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n       *\n       * const options = new RequestOptions({\n       *   method: RequestMethod.Post\n       * });\n       * const req = new Request(options.merge({\n       *   url: 'https://google.com'\n       * }));\n       * console.log('req.method:', RequestMethod[req.method]); // Post\n       * console.log('options.url:', options.url); // null\n       * console.log('req.url:', req.url); // https://google.com\n       * ```\n       */\n    function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    BaseRequestOptions.ctorParameters = function () { return []; };\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = (requestOptions.url);\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName((requestOptions.method));\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = (requestOptions.withCredentials);\n        _this.responseType = (requestOptions.responseType);\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    /**\n       * Returns the content type enum based on header options.\n       */\n    Request.prototype.detectContentType = /**\n       * Returns the content type enum based on header options.\n       */\n    function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    /**\n       * Returns the content type of request's body based on its type.\n       */\n    Request.prototype.detectContentTypeFromBody = /**\n       * Returns the content type of request's body based on its type.\n       */\n    function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    /**\n       * Returns the request's body according to its type. If body is undefined, return\n       * null.\n       */\n    Request.prototype.getBody = /**\n       * Returns the request's body according to its type. If body is undefined, return\n       * null.\n       */\n    function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated use @angular/common/http instead\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    /**\n       * Performs any type of http request. First argument is required, and can either be a url or\n       * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n       * object can be provided as the 2nd argument. The options object will be merged with the values\n       * of {@link BaseRequestOptions} before performing the request.\n       */\n    Http.prototype.request = /**\n       * Performs any type of http request. First argument is required, and can either be a url or\n       * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n       * object can be provided as the 2nd argument. The options object will be merged with the values\n       * of {@link BaseRequestOptions} before performing the request.\n       */\n    function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    /**\n       * Performs a request with `get` http method.\n       */\n    Http.prototype.get = /**\n       * Performs a request with `get` http method.\n       */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    /**\n       * Performs a request with `post` http method.\n       */\n    Http.prototype.post = /**\n       * Performs a request with `post` http method.\n       */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    /**\n       * Performs a request with `put` http method.\n       */\n    Http.prototype.put = /**\n       * Performs a request with `put` http method.\n       */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    /**\n       * Performs a request with `delete` http method.\n       */\n    Http.prototype.delete = /**\n       * Performs a request with `delete` http method.\n       */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    /**\n       * Performs a request with `patch` http method.\n       */\n    Http.prototype.patch = /**\n       * Performs a request with `patch` http method.\n       */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    /**\n       * Performs a request with `head` http method.\n       */\n    Http.prototype.head = /**\n       * Performs a request with `head` http method.\n       */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    /**\n       * Performs a request with `options` http method.\n       */\n    Http.prototype.options = /**\n       * Performs a request with `options` http method.\n       */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Http.ctorParameters = function () { return [\n        { type: ConnectionBackend, },\n        { type: RequestOptions, },\n    ]; };\n    return Http;\n}());\n/**\n * @deprecated use @angular/common/http instead\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    /**\n       * Performs any type of http request. First argument is required, and can either be a url or\n       * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n       * object can be provided as the 2nd argument. The options object will be merged with the values\n       * of {@link BaseRequestOptions} before performing the request.\n       *\n       * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n       * supported by all current browsers. Because JSONP creates a `<script>` element with\n       * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n       * source could expose your application to XSS risks. Data exposed by JSONP may also be\n       * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n       * future security issues (e.g. content sniffing).  For more detail, see the\n       * [Security Guide](http://g.co/ng/security).\n       */\n    Jsonp.prototype.request = /**\n       * Performs any type of http request. First argument is required, and can either be a url or\n       * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n       * object can be provided as the 2nd argument. The options object will be merged with the values\n       * of {@link BaseRequestOptions} before performing the request.\n       *\n       * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n       * supported by all current browsers. Because JSONP creates a `<script>` element with\n       * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n       * source could expose your application to XSS risks. Data exposed by JSONP may also be\n       * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n       * future security issues (e.g. content sniffing).  For more detail, see the\n       * [Security Guide](http://g.co/ng/security).\n       */\n    function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Jsonp.ctorParameters = function () { return [\n        { type: ConnectionBackend, },\n        { type: RequestOptions, },\n    ]; };\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated use @angular/common/http instead\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        // TODO(pascal): use factory type annotations once supported in DI\n                        // issue: https://github.com/angular/angular/issues/3183\n                        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                        BrowserXhr,\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\n                        XHRBackend,\n                        { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    HttpModule.ctorParameters = function () { return []; };\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated use @angular/common/http instead\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        // TODO(pascal): use factory type annotations once supported in DI\n                        // issue: https://github.com/angular/angular/issues/3183\n                        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                        BrowserJsonp,\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\n                        JSONPBackend,\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    JsonpModule.ctorParameters = function () { return []; };\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated use @angular/common/http instead\n */\nvar VERSION = new Version('6.0.3');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { NotifierModule, NotifierService } from './index';\nexport { NotifierContainerComponent as ɵf } from './src/components/notifier-container.component';\nexport { NotifierNotificationComponent as ɵh } from './src/components/notifier-notification.component';\nexport { NotifierConfig as ɵe } from './src/models/notifier-config.model';\nexport { NotifierConfigToken as ɵb, NotifierOptionsToken as ɵa, notifierCustomConfigFactory as ɵc, notifierDefaultConfigFactory as ɵd } from './src/notifier.module';\nexport { NotifierAnimationService as ɵj } from './src/services/notifier-animation.service';\nexport { NotifierQueueService as ɵg } from './src/services/notifier-queue.service';\nexport { NotifierTimerService as ɵi } from './src/services/notifier-timer.service';\n//# sourceMappingURL=angular-notifier.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { NotifierModule } from './src/notifier.module';\nexport { NotifierService } from './src/services/notifier.service';\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Fade animation preset\n */\nexport var /** @type {?} */ fade = {\n    hide: function () {\n        return {\n            from: {\n                opacity: '1'\n            },\n            to: {\n                opacity: '0'\n            }\n        };\n    },\n    show: function () {\n        return {\n            from: {\n                opacity: '0'\n            },\n            to: {\n                opacity: '1'\n            }\n        };\n    }\n};\n//# sourceMappingURL=fade.animation-preset.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Slide animation preset\n */\nexport var /** @type {?} */ slide = {\n    hide: function (notification) {\n        // Prepare variables\n        var /** @type {?} */ config = notification.component.getConfig();\n        var /** @type {?} */ shift = notification.component.getShift();\n        var /** @type {?} */ from;\n        var /** @type {?} */ to;\n        // Configure variables, depending on configuration and component\n        if (config.position.horizontal.position === 'left') {\n            from = {\n                transform: \"translate3d( 0, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( calc( -100% - \" + config.position.horizontal.distance + \"px - 10px ), \" + shift + \"px, 0 )\"\n            };\n        }\n        else if (config.position.horizontal.position === 'right') {\n            from = {\n                transform: \"translate3d( 0, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( calc( 100% + \" + config.position.horizontal.distance + \"px + 10px ), \" + shift + \"px, 0 )\"\n            };\n        }\n        else {\n            var /** @type {?} */ horizontalPosition = void 0;\n            if (config.position.vertical.position === 'top') {\n                horizontalPosition = \"calc( -100% - \" + config.position.horizontal.distance + \"px - 10px )\";\n            }\n            else {\n                horizontalPosition = \"calc( 100% + \" + config.position.horizontal.distance + \"px + 10px )\";\n            }\n            from = {\n                transform: \"translate3d( -50%, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( -50%, \" + horizontalPosition + \", 0 )\"\n            };\n        }\n        // Done\n        return {\n            from: from,\n            to: to\n        };\n    },\n    show: function (notification) {\n        // Prepare variables\n        var /** @type {?} */ config = notification.component.getConfig();\n        var /** @type {?} */ from;\n        var /** @type {?} */ to;\n        // Configure variables, depending on configuration and component\n        if (config.position.horizontal.position === 'left') {\n            from = {\n                transform: \"translate3d( calc( -100% - \" + config.position.horizontal.distance + \"px - 10px ), 0, 0 )\"\n            };\n            to = {\n                transform: 'translate3d( 0, 0, 0 )'\n            };\n        }\n        else if (config.position.horizontal.position === 'right') {\n            from = {\n                transform: \"translate3d( calc( 100% + \" + config.position.horizontal.distance + \"px + 10px ), 0, 0 )\"\n            };\n            to = {\n                transform: 'translate3d( 0, 0, 0 )'\n            };\n        }\n        else {\n            var /** @type {?} */ horizontalPosition = void 0;\n            if (config.position.vertical.position === 'top') {\n                horizontalPosition = \"calc( -100% - \" + config.position.horizontal.distance + \"px - 10px )\";\n            }\n            else {\n                horizontalPosition = \"calc( 100% + \" + config.position.horizontal.distance + \"px + 10px )\";\n            }\n            from = {\n                transform: \"translate3d( -50%, \" + horizontalPosition + \", 0 )\"\n            };\n            to = {\n                transform: 'translate3d( -50%, 0, 0 )'\n            };\n        }\n        // Done\n        return {\n            from: from,\n            to: to\n        };\n    }\n};\n//# sourceMappingURL=slide.animation-preset.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { NotifierNotification } from './../models/notifier-notification.model';\nimport { NotifierQueueService } from './../services/notifier-queue.service';\nimport { NotifierService } from './../services/notifier.service';\n/**\n * Notifier container component\n * ----------------------------\n * This component acts as a wrapper for all notification components; consequently, it is responsible for creating a new notification\n * component and removing an existing notification component. Being more precicely, it also handles side effects of those actions, such as\n * shifting or even completely removing other notifications as well. Overall, this components handles actions coming from the queue service\n * by subscribing to its action stream.\n *\n * Technical sidenote:\n * This component has to be used somewhere in an application to work; it will not inject and create itself automatically, primarily in order\n * to not break the Angular AoT compilation. Moreover, this component (and also the notification components) set their change detection\n * strategy onPush, which means that we handle change detection manually in order to get the best performance. (#perfmatters)\n */\nvar NotifierContainerComponent = /** @class */ (function () {\n    function NotifierContainerComponent(changeDetector, notifierQueueService, notifierService) {\n        this.changeDetector = changeDetector;\n        this.queueService = notifierQueueService;\n        this.config = notifierService.getConfig();\n        this.notifications = [];\n    }\n    /**\n     * Component initialization lifecycle hook, connects this component to the action queue, and then handles incoming actions\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.ngOnInit = /**\n     * Component initialization lifecycle hook, connects this component to the action queue, and then handles incoming actions\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.queueServiceSubscription = this.queueService.actionStream.subscribe(function (action) {\n            _this.handleAction(action).then(function () {\n                _this.queueService.continue();\n            });\n        });\n    };\n    /**\n     * Component destroyment lifecycle hook, cleans up the observable subsciption\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.ngOnDestroy = /**\n     * Component destroyment lifecycle hook, cleans up the observable subsciption\n     * @return {?}\n     */\n    function () {\n        if (this.queueServiceSubscription) {\n            this.queueServiceSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Notification identifier, used as the ngFor trackby function\n     *\n     * @param {?} index        Index\n     * @param {?} notification Notifier notification\n     * @return {?} Notification ID as the unique identnfier\n     */\n    NotifierContainerComponent.prototype.identifyNotification = /**\n     * Notification identifier, used as the ngFor trackby function\n     *\n     * @param {?} index        Index\n     * @param {?} notification Notifier notification\n     * @return {?} Notification ID as the unique identnfier\n     */\n    function (index, notification) {\n        return notification.id;\n    };\n    /**\n     * Event handler, handles clicks on notification dismiss buttons\n     *\n     * @param {?} notificationId ID of the notification to dismiss\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.onNotificationDismiss = /**\n     * Event handler, handles clicks on notification dismiss buttons\n     *\n     * @param {?} notificationId ID of the notification to dismiss\n     * @return {?}\n     */\n    function (notificationId) {\n        this.queueService.push({\n            payload: notificationId,\n            type: 'HIDE'\n        });\n    };\n    /**\n     * Event handler, handles notification ready events\n     *\n     * @param {?} notificationComponent Notification component reference\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.onNotificationReady = /**\n     * Event handler, handles notification ready events\n     *\n     * @param {?} notificationComponent Notification component reference\n     * @return {?}\n     */\n    function (notificationComponent) {\n        var /** @type {?} */ currentNotification = this.notifications[this.notifications.length - 1]; // Get the latest notification\n        currentNotification.component = notificationComponent; // Save the new omponent reference\n        this.continueHandleShowAction(currentNotification); // Continue with handling the show action\n    };\n    /**\n     * Handle incoming actions by mapping action types to methods, and then running them\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleAction = /**\n     * Handle incoming actions by mapping action types to methods, and then running them\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        switch (action.type) {\n            // TODO: Maybe a map (actionType -> class method) is a cleaner solution here?\n            case 'SHOW':\n                return this.handleShowAction(action);\n            case 'HIDE':\n                return this.handleHideAction(action);\n            case 'HIDE_OLDEST':\n                return this.handleHideOldestAction(action);\n            case 'HIDE_NEWEST':\n                return this.handleHideNewestAction(action);\n            case 'HIDE_ALL':\n                return this.handleHideAllAction(action);\n            default:\n                return new Promise(function (resolve, reject) {\n                    resolve(); // Ignore unknown action types\n                });\n        }\n    };\n    /**\n     * Show a new notification\n     *\n     * We simply add the notification to the list, and then wait until its properly initialized / created / rendered.\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleShowAction = /**\n     * Show a new notification\n     *\n     * We simply add the notification to the list, and then wait until its properly initialized / created / rendered.\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.tempPromiseResolver = resolve; // Save the promise resolve function so that it can be called later on by another method\n            _this.addNotificationToList(new NotifierNotification(action.payload));\n        });\n    };\n    /**\n     * Continue to show a new notification (after the notification components is initialized / created / rendered).\n     *\n     * If this is the first (and thus only) notification, we can simply show it. Otherwhise, if stacking is disabled (or a low value), we\n     * switch out notifications, in particular we hide the existing one, and then show our new one. Yet, if stacking is enabled, we first\n     * shift all older notifications, and then show our new notification. In addition, if there are too many notification on the screen,\n     * we hide the oldest one first. Furthermore, if configured, animation overlapping is applied.\n     *\n     * @param {?} notification New notification to show\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.continueHandleShowAction = /**\n     * Continue to show a new notification (after the notification components is initialized / created / rendered).\n     *\n     * If this is the first (and thus only) notification, we can simply show it. Otherwhise, if stacking is disabled (or a low value), we\n     * switch out notifications, in particular we hide the existing one, and then show our new one. Yet, if stacking is enabled, we first\n     * shift all older notifications, and then show our new notification. In addition, if there are too many notification on the screen,\n     * we hide the oldest one first. Furthermore, if configured, animation overlapping is applied.\n     *\n     * @param {?} notification New notification to show\n     * @return {?}\n     */\n    function (notification) {\n        var _this = this;\n        // First (which means only one) notification in the list?\n        var /** @type {?} */ numberOfNotifications = this.notifications.length;\n        if (numberOfNotifications === 1) {\n            notification.component.show().then(this.tempPromiseResolver); // Done\n        }\n        else {\n            var /** @type {?} */ implicitStackingLimit = 2;\n            // Stacking enabled? (stacking value below 2 means stacking is disabled)\n            if (this.config.behaviour.stacking === false || this.config.behaviour.stacking < implicitStackingLimit) {\n                this.notifications[0].component.hide().then(function () {\n                    _this.removeNotificationFromList(_this.notifications[0]);\n                    notification.component.show().then(_this.tempPromiseResolver); // Done\n                });\n            }\n            else {\n                var /** @type {?} */ stepPromises_1 = [];\n                // Are there now too many notifications?\n                if (numberOfNotifications > this.config.behaviour.stacking) {\n                    var /** @type {?} */ oldNotifications_1 = this.notifications.slice(1, numberOfNotifications - 1);\n                    // Are animations enabled?\n                    if (this.config.animations.enabled) {\n                        // Is animation overlap enabled?\n                        if (this.config.animations.overlap !== false && this.config.animations.overlap > 0) {\n                            stepPromises_1.push(this.notifications[0].component.hide());\n                            setTimeout(function () {\n                                stepPromises_1.push(_this.shiftNotifications(oldNotifications_1, notification.component.getHeight(), true));\n                            }, this.config.animations.hide.speed - this.config.animations.overlap);\n                            setTimeout(function () {\n                                stepPromises_1.push(notification.component.show());\n                            }, this.config.animations.hide.speed + this.config.animations.shift.speed - this.config.animations.overlap);\n                        }\n                        else {\n                            stepPromises_1.push(new Promise(function (resolve, reject) {\n                                _this.notifications[0].component.hide().then(function () {\n                                    _this.shiftNotifications(oldNotifications_1, notification.component.getHeight(), true).then(function () {\n                                        notification.component.show().then(resolve);\n                                    });\n                                });\n                            }));\n                        }\n                    }\n                    else {\n                        stepPromises_1.push(this.notifications[0].component.hide());\n                        stepPromises_1.push(this.shiftNotifications(oldNotifications_1, notification.component.getHeight(), true));\n                        stepPromises_1.push(notification.component.show());\n                    }\n                }\n                else {\n                    var /** @type {?} */ oldNotifications_2 = this.notifications.slice(0, numberOfNotifications - 1);\n                    // Are animations enabled?\n                    if (this.config.animations.enabled) {\n                        // Is animation overlap enabled?\n                        if (this.config.animations.overlap !== false && this.config.animations.overlap > 0) {\n                            stepPromises_1.push(this.shiftNotifications(oldNotifications_2, notification.component.getHeight(), true));\n                            setTimeout(function () {\n                                stepPromises_1.push(notification.component.show());\n                            }, this.config.animations.shift.speed - this.config.animations.overlap);\n                        }\n                        else {\n                            stepPromises_1.push(new Promise(function (resolve, reject) {\n                                _this.shiftNotifications(oldNotifications_2, notification.component.getHeight(), true).then(function () {\n                                    notification.component.show().then(resolve);\n                                });\n                            }));\n                        }\n                    }\n                    else {\n                        stepPromises_1.push(this.shiftNotifications(oldNotifications_2, notification.component.getHeight(), true));\n                        stepPromises_1.push(notification.component.show());\n                    }\n                }\n                Promise.all(stepPromises_1).then(function () {\n                    if (numberOfNotifications > _this.config.behaviour.stacking) {\n                        _this.removeNotificationFromList(_this.notifications[0]);\n                    }\n                    _this.tempPromiseResolver();\n                }); // Done\n            }\n        }\n    };\n    /**\n     * Hide an existing notification\n     *\n     * Fist, we skip everything if there are no notifications at all, or the given notification does not exist. Then, we hide the given\n     * notification. If there exist older notifications, we then shift them around to fill the gap. Once both hiding the given notification\n     * and shifting the older notificaitons is done, the given notification gets finally removed (from the DOM).\n     *\n     * @param {?} action Action object, payload contains the notification ID\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideAction = /**\n     * Hide an existing notification\n     *\n     * Fist, we skip everything if there are no notifications at all, or the given notification does not exist. Then, we hide the given\n     * notification. If there exist older notifications, we then shift them around to fill the gap. Once both hiding the given notification\n     * and shifting the older notificaitons is done, the given notification gets finally removed (from the DOM).\n     *\n     * @param {?} action Action object, payload contains the notification ID\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var /** @type {?} */ stepPromises = [];\n            // Does the notification exist / are there even any notifications? (let's prevent accidential errors)\n            var /** @type {?} */ notification = _this.findNotificationById(action.payload);\n            if (notification === undefined) {\n                resolve();\n                return;\n            }\n            // Get older notifications\n            var /** @type {?} */ notificationIndex = _this.findNotificationIndexById(action.payload);\n            if (notificationIndex === undefined) {\n                resolve();\n                return;\n            }\n            var /** @type {?} */ oldNotifications = _this.notifications.slice(0, notificationIndex);\n            // Do older notifications exist, and thus do we need to shift other notifications as a consequence?\n            if (oldNotifications.length > 0) {\n                // Are animations enabled?\n                if (_this.config.animations.enabled && _this.config.animations.hide.speed > 0) {\n                    // Is animation overlap enabled?\n                    if (_this.config.animations.overlap !== false && _this.config.animations.overlap > 0) {\n                        stepPromises.push(notification.component.hide());\n                        setTimeout(function () {\n                            stepPromises.push(_this.shiftNotifications(oldNotifications, notification.component.getHeight(), false));\n                        }, _this.config.animations.hide.speed - _this.config.animations.overlap);\n                    }\n                    else {\n                        notification.component.hide().then(function () {\n                            stepPromises.push(_this.shiftNotifications(oldNotifications, notification.component.getHeight(), false));\n                        });\n                    }\n                }\n                else {\n                    stepPromises.push(notification.component.hide());\n                    stepPromises.push(_this.shiftNotifications(oldNotifications, notification.component.getHeight(), false));\n                }\n            }\n            else {\n                stepPromises.push(notification.component.hide());\n            }\n            // Wait until both hiding and shifting is done, then remove the notification from the list\n            Promise.all(stepPromises).then(function () {\n                _this.removeNotificationFromList(notification);\n                resolve(); // Done\n            });\n        });\n    };\n    /**\n     * Hide the oldest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideOldestAction = /**\n     * Hide the oldest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        // Are there any notifications? (prevent accidential errors)\n        if (this.notifications.length === 0) {\n            return new Promise(function (resolve, reject) {\n                resolve();\n            }); // Done\n        }\n        else {\n            action.payload = this.notifications[0].id;\n            return this.handleHideAction(action);\n        }\n    };\n    /**\n     * Hide the newest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideNewestAction = /**\n     * Hide the newest notification (bridge to handleHideAction)\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        // Are there any notifications? (prevent accidential errors)\n        if (this.notifications.length === 0) {\n            return new Promise(function (resolve, reject) {\n                resolve();\n            }); // Done\n        }\n        else {\n            action.payload = this.notifications[this.notifications.length - 1].id;\n            return this.handleHideAction(action);\n        }\n    };\n    /**\n     * Hide all notifications at once\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.handleHideAllAction = /**\n     * Hide all notifications at once\n     *\n     * @param {?} action Action object\n     * @return {?} Promise, resolved when done\n     */\n    function (action) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // Are there any notifications? (prevent accidential errors)\n            var /** @type {?} */ numberOfNotifications = _this.notifications.length;\n            if (numberOfNotifications === 0) {\n                resolve(); // Done\n                return;\n            }\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.hide.speed > 0 && _this.config.animations.hide.offset !== false &&\n                _this.config.animations.hide.offset > 0) {\n                var _loop_1 = function (i) {\n                    var /** @type {?} */ animationOffset = _this.config.position.vertical.position === 'top' ? numberOfNotifications - 1 : i;\n                    setTimeout(function () {\n                        _this.notifications[i].component.hide().then(function () {\n                            // Are we done here, was this the last notification to be hidden?\n                            if ((_this.config.position.vertical.position === 'top' && i === 0) ||\n                                (_this.config.position.vertical.position === 'bottom' && i === numberOfNotifications - 1)) {\n                                _this.removeAllNotificationsFromList();\n                                resolve(); // Done\n                            }\n                        });\n                    }, _this.config.animations.hide.offset * animationOffset);\n                };\n                for (var /** @type {?} */ i = numberOfNotifications - 1; i >= 0; i--) {\n                    _loop_1(i);\n                }\n            }\n            else {\n                var /** @type {?} */ stepPromises = [];\n                for (var /** @type {?} */ i = numberOfNotifications - 1; i >= 0; i--) {\n                    stepPromises.push(_this.notifications[i].component.hide());\n                }\n                Promise.all(stepPromises).then(function () {\n                    _this.removeAllNotificationsFromList();\n                    resolve(); // Done\n                });\n            }\n        });\n    };\n    /**\n     * Shift multiple notifications at once\n     *\n     * @param {?} notifications List containing the notifications to be shifted\n     * @param {?} distance      Distance to shift (in px)\n     * @param {?} toMakePlace   Flag, defining in which direciton to shift\n     * @return {?} Promise, resolved when done\n     */\n    NotifierContainerComponent.prototype.shiftNotifications = /**\n     * Shift multiple notifications at once\n     *\n     * @param {?} notifications List containing the notifications to be shifted\n     * @param {?} distance      Distance to shift (in px)\n     * @param {?} toMakePlace   Flag, defining in which direciton to shift\n     * @return {?} Promise, resolved when done\n     */\n    function (notifications, distance, toMakePlace) {\n        return new Promise(function (resolve, reject) {\n            // Are there any notifications to shift?\n            if (notifications.length === 0) {\n                resolve();\n                return;\n            }\n            var /** @type {?} */ notificationPromises = [];\n            for (var /** @type {?} */ i = notifications.length - 1; i >= 0; i--) {\n                notificationPromises.push(notifications[i].component.shift(distance, toMakePlace));\n            }\n            Promise.all(notificationPromises).then(resolve); // Done\n        });\n    };\n    /**\n     * Add a new notification to the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to add to the list of notifications\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.addNotificationToList = /**\n     * Add a new notification to the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to add to the list of notifications\n     * @return {?}\n     */\n    function (notification) {\n        this.notifications.push(notification);\n        this.changeDetector.markForCheck(); // Run change detection because the notification list changed\n    };\n    /**\n     * Remove an existing notification from the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to be removed from the list of notifications\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.removeNotificationFromList = /**\n     * Remove an existing notification from the list of notifications (triggers change detection)\n     *\n     * @param {?} notification Notification to be removed from the list of notifications\n     * @return {?}\n     */\n    function (notification) {\n        this.notifications =\n            this.notifications.filter(function (item) { return item.component !== notification.component; });\n        this.changeDetector.markForCheck(); // Run change detection because the notification list changed\n    };\n    /**\n     * Remove all notifications from the list (triggers change detection)\n     * @return {?}\n     */\n    NotifierContainerComponent.prototype.removeAllNotificationsFromList = /**\n     * Remove all notifications from the list (triggers change detection)\n     * @return {?}\n     */\n    function () {\n        this.notifications = [];\n        this.changeDetector.markForCheck(); // Run change detection because the notification list changed\n    };\n    /**\n     * Helper: Find a notification in the notification list by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding notification\n     * @return {?} Notification, undefined if not found\n     */\n    NotifierContainerComponent.prototype.findNotificationById = /**\n     * Helper: Find a notification in the notification list by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding notification\n     * @return {?} Notification, undefined if not found\n     */\n    function (notificationId) {\n        return this.notifications.find(function (currentNotification) { return currentNotification.id === notificationId; });\n    };\n    /**\n     * Helper: Find a notification's index by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding a notification's index\n     * @return {?} Notification index, undefined if not found\n     */\n    NotifierContainerComponent.prototype.findNotificationIndexById = /**\n     * Helper: Find a notification's index by a given notification ID\n     *\n     * @param {?} notificationId Notification ID, used for finding a notification's index\n     * @return {?} Notification index, undefined if not found\n     */\n    function (notificationId) {\n        var /** @type {?} */ notificationIndex = this.notifications.findIndex(function (currentNotification) { return currentNotification.id === notificationId; });\n        return (notificationIndex !== -1 ? notificationIndex : undefined);\n    };\n    NotifierContainerComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // (#perfmatters)\n                    host: {\n                        class: 'notifier__container'\n                    },\n                    selector: 'notifier-container',\n                    template: '<ul><li *ngFor=\"let notification of notifications; trackBy: identifyNotification;\" class=\"notifier__container-list\"><notifier-notification (dismiss)=\"onNotificationDismiss( $event )\" (ready)=\"onNotificationReady( $event )\" [notification]=\"notification\"></notifier-notification></ul>'\n                },] },\n    ];\n    /** @nocollapse */\n    NotifierContainerComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: NotifierQueueService },\n        { type: NotifierService }\n    ]; };\n    return NotifierContainerComponent;\n}());\nexport { NotifierContainerComponent };\nfunction NotifierContainerComponent_tsickle_Closure_declarations() {\n    /**\n     * List of currently somewhat active notifications\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.notifications;\n    /**\n     * Change detector\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.changeDetector;\n    /**\n     * Notifier queue service\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.queueService;\n    /**\n     * Notifier configuration\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.config;\n    /**\n     * Queue service observable subscription (saved for cleanup)\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.queueServiceSubscription;\n    /**\n     * Promise resolve function reference, temporarily used while the notification child component gets created\n     * @type {?}\n     */\n    NotifierContainerComponent.prototype.tempPromiseResolver;\n}\n//# sourceMappingURL=notifier-container.component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { NotifierAnimationService } from './../services/notifier-animation.service';\nimport { NotifierNotification } from './../models/notifier-notification.model';\nimport { NotifierService } from './../services/notifier.service';\nimport { NotifierTimerService } from './../services/notifier-timer.service';\n/**\n * Notifier notification component\n * -------------------------------\n * This component is responsible for actually displaying the notification on screen. In addition, it's able to show and hide this\n * notification, in particular to animate this notification in and out, as well as shift (move) this notification vertically around.\n * Furthermore, the notification component handles all interactions the user has with this notification / component, such as clicks and\n * mouse movements.\n */\nvar NotifierNotificationComponent = /** @class */ (function () {\n    function NotifierNotificationComponent(elementRef, renderer, notifierService, notifierTimerService, notifierAnimationService) {\n        this.config = notifierService.getConfig();\n        this.ready = new EventEmitter();\n        this.dismiss = new EventEmitter();\n        this.timerService = notifierTimerService;\n        this.animationService = notifierAnimationService;\n        this.renderer = renderer;\n        this.element = elementRef.nativeElement;\n        this.elementShift = 0;\n    }\n    /**\n     * Component after view init lifecycle hook, setts up the component and then emits the ready event\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.ngAfterViewInit = /**\n     * Component after view init lifecycle hook, setts up the component and then emits the ready event\n     * @return {?}\n     */\n    function () {\n        this.setup();\n        this.elementHeight = this.element.offsetHeight;\n        this.elementWidth = this.element.offsetWidth;\n        this.ready.emit(this);\n    };\n    /**\n     * Get the notifier config\n     *\n     * @return {?} Notifier configuration\n     */\n    NotifierNotificationComponent.prototype.getConfig = /**\n     * Get the notifier config\n     *\n     * @return {?} Notifier configuration\n     */\n    function () {\n        return this.config;\n    };\n    /**\n     * Get notification element height (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    NotifierNotificationComponent.prototype.getHeight = /**\n     * Get notification element height (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    function () {\n        return this.elementHeight;\n    };\n    /**\n     * Get notification element width (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    NotifierNotificationComponent.prototype.getWidth = /**\n     * Get notification element width (in px)\n     *\n     * @return {?} Notification element height (in px)\n     */\n    function () {\n        return this.elementWidth;\n    };\n    /**\n     * Get notification shift offset (in px)\n     *\n     * @return {?} Notification element shift offset (in px)\n     */\n    NotifierNotificationComponent.prototype.getShift = /**\n     * Get notification shift offset (in px)\n     *\n     * @return {?} Notification element shift offset (in px)\n     */\n    function () {\n        return this.elementShift;\n    };\n    /**\n     * Show (animate in) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    NotifierNotificationComponent.prototype.show = /**\n     * Show (animate in) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.show.speed > 0) {\n                // Get animation data\n                var /** @type {?} */ animationData = _this.animationService.getAnimationData('show', _this.notification);\n                // Set initial styles (styles before animation), prevents quick flicker when animation starts\n                var /** @type {?} */ animatedProperties = Object.keys(animationData.keyframes[0]);\n                for (var /** @type {?} */ i = animatedProperties.length - 1; i >= 0; i--) {\n                    _this.renderer.setStyle(_this.element, animatedProperties[i], animationData.keyframes[0][animatedProperties[i]]);\n                }\n                // Animate notification in\n                // Animate notification in\n                _this.renderer.setStyle(_this.element, 'visibility', 'visible');\n                var /** @type {?} */ animation = _this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = function () {\n                    _this.startAutoHideTimer();\n                    resolve(); // Done\n                };\n            }\n            else {\n                // Show notification\n                // Show notification\n                _this.renderer.setStyle(_this.element, 'visibility', 'visible');\n                _this.startAutoHideTimer();\n                resolve(); // Done\n            }\n        });\n    };\n    /**\n     * Hide (animate out) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    NotifierNotificationComponent.prototype.hide = /**\n     * Hide (animate out) this notification\n     *\n     * @return {?} Promise, resolved when done\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.stopAutoHideTimer();\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.hide.speed > 0) {\n                var /** @type {?} */ animationData = _this.animationService.getAnimationData('hide', _this.notification);\n                var /** @type {?} */ animation = _this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = function () {\n                    resolve(); // Done\n                };\n            }\n            else {\n                resolve(); // Done\n            }\n        });\n    };\n    /**\n     * Shift (move) this notification\n     *\n     * @param {?} distance         Distance to shift (in px)\n     * @param {?} shiftToMakePlace Flag, defining in which direction to shift\n     * @return {?} Promise, resolved when done\n     */\n    NotifierNotificationComponent.prototype.shift = /**\n     * Shift (move) this notification\n     *\n     * @param {?} distance         Distance to shift (in px)\n     * @param {?} shiftToMakePlace Flag, defining in which direction to shift\n     * @return {?} Promise, resolved when done\n     */\n    function (distance, shiftToMakePlace) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // Calculate new position (position after the shift)\n            var /** @type {?} */ newElementShift;\n            if ((_this.config.position.vertical.position === 'top' && shiftToMakePlace)\n                || (_this.config.position.vertical.position === 'bottom' && !shiftToMakePlace)) {\n                newElementShift = _this.elementShift + distance + _this.config.position.vertical.gap;\n            }\n            else {\n                newElementShift = _this.elementShift - distance - _this.config.position.vertical.gap;\n            }\n            var /** @type {?} */ horizontalPosition = _this.config.position.horizontal.position === 'middle' ? '-50%' : '0';\n            // Are animations enabled?\n            if (_this.config.animations.enabled && _this.config.animations.shift.speed > 0) {\n                var /** @type {?} */ animationData = {\n                    // TODO: Extract into animation service\n                    keyframes: [\n                        {\n                            transform: \"translate3d( \" + horizontalPosition + \", \" + _this.elementShift + \"px, 0 )\"\n                        },\n                        {\n                            transform: \"translate3d( \" + horizontalPosition + \", \" + newElementShift + \"px, 0 )\"\n                        }\n                    ],\n                    options: {\n                        duration: _this.config.animations.shift.speed,\n                        easing: _this.config.animations.shift.easing,\n                        fill: 'forwards'\n                    }\n                };\n                _this.elementShift = newElementShift;\n                var /** @type {?} */ animation = _this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = function () {\n                    resolve(); // Done\n                };\n            }\n            else {\n                _this.renderer.setStyle(_this.element, 'transform', \"translate3d( \" + horizontalPosition + \", \" + newElementShift + \"px, 0 )\");\n                _this.elementShift = newElementShift;\n                resolve(); // Done\n            }\n        });\n    };\n    /**\n     * Handle click on dismiss button\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onClickDismiss = /**\n     * Handle click on dismiss button\n     * @return {?}\n     */\n    function () {\n        this.dismiss.emit(this.notification.id);\n    };\n    /**\n     * Handle mouseover over notification area\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onNotificationMouseover = /**\n     * Handle mouseover over notification area\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.onMouseover === 'pauseAutoHide') {\n            this.pauseAutoHideTimer();\n        }\n        else if (this.config.behaviour.onMouseover === 'resetAutoHide') {\n            this.stopAutoHideTimer();\n        }\n    };\n    /**\n     * Handle mouseout from notification area\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onNotificationMouseout = /**\n     * Handle mouseout from notification area\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.onMouseover === 'pauseAutoHide') {\n            this.continueAutoHideTimer();\n        }\n        else if (this.config.behaviour.onMouseover === 'resetAutoHide') {\n            this.startAutoHideTimer();\n        }\n    };\n    /**\n     * Handle click on notification area\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.onNotificationClick = /**\n     * Handle click on notification area\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.onClick === 'hide') {\n            this.onClickDismiss();\n        }\n    };\n    /**\n     * Start the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.startAutoHideTimer = /**\n     * Start the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.start(this.config.behaviour.autoHide).then(function () {\n                _this.onClickDismiss();\n            });\n        }\n    };\n    /**\n     * Pause the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.pauseAutoHideTimer = /**\n     * Pause the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.pause();\n        }\n    };\n    /**\n     * Continue the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.continueAutoHideTimer = /**\n     * Continue the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.continue();\n        }\n    };\n    /**\n     * Stop the auto hide timer (if enabled)\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.stopAutoHideTimer = /**\n     * Stop the auto hide timer (if enabled)\n     * @return {?}\n     */\n    function () {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.stop();\n        }\n    };\n    /**\n     * Initial notification setup\n     * @return {?}\n     */\n    NotifierNotificationComponent.prototype.setup = /**\n     * Initial notification setup\n     * @return {?}\n     */\n    function () {\n        // Set start position (initially the exact same for every new notification)\n        if (this.config.position.horizontal.position === 'left') {\n            this.renderer.setStyle(this.element, 'left', this.config.position.horizontal.distance + \"px\");\n        }\n        else if (this.config.position.horizontal.position === 'right') {\n            this.renderer.setStyle(this.element, 'right', this.config.position.horizontal.distance + \"px\");\n        }\n        else {\n            this.renderer.setStyle(this.element, 'left', '50%');\n            // Let's get the GPU handle some work as well (#perfmatters)\n            this.renderer.setStyle(this.element, 'transform', 'translate3d( -50%, 0, 0 )');\n        }\n        if (this.config.position.vertical.position === 'top') {\n            this.renderer.setStyle(this.element, 'top', this.config.position.vertical.distance + \"px\");\n        }\n        else {\n            this.renderer.setStyle(this.element, 'bottom', this.config.position.vertical.distance + \"px\");\n        }\n        // Add classes (responsible for visual design)\n        this.renderer.addClass(this.element, \"notifier__notification--\" + this.notification.type);\n        this.renderer.addClass(this.element, \"notifier__notification--\" + this.config.theme);\n    };\n    NotifierNotificationComponent.decorators = [\n        { type: Component, args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // (#perfmatters)\n                    host: {\n                        '(click)': 'onNotificationClick()',\n                        '(mouseout)': 'onNotificationMouseout()',\n                        '(mouseover)': 'onNotificationMouseover()',\n                        class: 'notifier__notification'\n                    },\n                    providers: [\n                        NotifierTimerService\n                    ],\n                    selector: 'notifier-notification',\n                    template: '<p class=\"notifier__notification-message\">{{ notification.message }}</p><button (click)=\"onClickDismiss()\" *ngIf=\"config.behaviour.showDismissButton\" class=\"notifier__notification-button\" title=\"dismiss\" type=\"button\"><svg class=\"notifier__notification-button-icon\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg></button>'\n                },] },\n    ];\n    /** @nocollapse */\n    NotifierNotificationComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: NotifierService },\n        { type: NotifierTimerService },\n        { type: NotifierAnimationService }\n    ]; };\n    NotifierNotificationComponent.propDecorators = {\n        notification: [{ type: Input }],\n        ready: [{ type: Output }],\n        dismiss: [{ type: Output }]\n    };\n    return NotifierNotificationComponent;\n}());\nexport { NotifierNotificationComponent };\nfunction NotifierNotificationComponent_tsickle_Closure_declarations() {\n    /**\n     * Input: Notification object, contains all details necessary to construct the notification\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.notification;\n    /**\n     * Output: Ready event, handles the initialization success by emitting a reference to this notification component\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.ready;\n    /**\n     * Output: Dismiss event, handles the click on the dismiss button by emitting the notification ID of this notification component\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.dismiss;\n    /**\n     * Notifier configuration\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.config;\n    /**\n     * Notifier timer service\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.timerService;\n    /**\n     * Notifier animation service\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.animationService;\n    /**\n     * Angular renderer, used to preserve the overall DOM abstraction & independence\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.renderer;\n    /**\n     * Native element reference, used for manipulating DOM properties\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.element;\n    /**\n     * Current notification height, calculated and cached here (#perfmatters)\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.elementHeight;\n    /**\n     * Current notification width, calculated and cached here (#perfmatters)\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.elementWidth;\n    /**\n     * Current notification shift, calculated and cached here (#perfmatters)\n     * @type {?}\n     */\n    NotifierNotificationComponent.prototype.elementShift;\n}\n//# sourceMappingURL=notifier-notification.component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nexport function NotifierOptions() { }\nfunction NotifierOptions_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.animations;\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.behaviour;\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.position;\n    /** @type {?|undefined} */\n    NotifierOptions.prototype.theme;\n}\n/**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nvar /**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nNotifierConfig = /** @class */ (function () {\n    function NotifierConfig(customOptions) {\n        if (customOptions === void 0) { customOptions = {}; }\n        // Set default values\n        this.animations = {\n            enabled: true,\n            hide: {\n                easing: 'ease',\n                offset: 50,\n                preset: 'fade',\n                speed: 300\n            },\n            overlap: 150,\n            shift: {\n                easing: 'ease',\n                speed: 300\n            },\n            show: {\n                easing: 'ease',\n                preset: 'slide',\n                speed: 300\n            }\n        };\n        this.behaviour = {\n            autoHide: 7000,\n            onClick: false,\n            onMouseover: 'pauseAutoHide',\n            showDismissButton: true,\n            stacking: 4\n        };\n        this.position = {\n            horizontal: {\n                distance: 12,\n                position: 'left'\n            },\n            vertical: {\n                distance: 12,\n                gap: 10,\n                position: 'bottom'\n            }\n        };\n        this.theme = 'material';\n        // The following merges the custom options into the notifier config, respecting the already set default values\n        // This linear, more explicit and code-sizy workflow is preferred here over a recursive one (because we know the object structure)\n        // Technical sidenote: Objects are merged, other types of values simply overwritten / copied\n        if (customOptions.theme !== undefined) {\n            this.theme = customOptions.theme;\n        }\n        if (customOptions.animations !== undefined) {\n            if (customOptions.animations.enabled !== undefined) {\n                this.animations.enabled = customOptions.animations.enabled;\n            }\n            if (customOptions.animations.overlap !== undefined) {\n                this.animations.overlap = customOptions.animations.overlap;\n            }\n            if (customOptions.animations.hide !== undefined) {\n                Object.assign(this.animations.hide, customOptions.animations.hide);\n            }\n            if (customOptions.animations.shift !== undefined) {\n                Object.assign(this.animations.shift, customOptions.animations.shift);\n            }\n            if (customOptions.animations.show !== undefined) {\n                Object.assign(this.animations.show, customOptions.animations.show);\n            }\n        }\n        if (customOptions.behaviour !== undefined) {\n            Object.assign(this.behaviour, customOptions.behaviour);\n        }\n        if (customOptions.position !== undefined) {\n            if (customOptions.position.horizontal !== undefined) {\n                Object.assign(this.position.horizontal, customOptions.position.horizontal);\n            }\n            if (customOptions.position.vertical !== undefined) {\n                Object.assign(this.position.vertical, customOptions.position.vertical);\n            }\n        }\n    }\n    return NotifierConfig;\n}());\n/**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nexport { NotifierConfig };\nfunction NotifierConfig_tsickle_Closure_declarations() {\n    /**\n     * Customize animations\n     * @type {?}\n     */\n    NotifierConfig.prototype.animations;\n    /**\n     * Customize behaviour\n     * @type {?}\n     */\n    NotifierConfig.prototype.behaviour;\n    /**\n     * Customize positioning\n     * @type {?}\n     */\n    NotifierConfig.prototype.position;\n    /**\n     * Customize theming\n     * @type {?}\n     */\n    NotifierConfig.prototype.theme;\n}\n//# sourceMappingURL=notifier-config.model.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nvar /**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nNotifierNotification = /** @class */ (function () {\n    function NotifierNotification(options) {\n        Object.assign(this, options);\n        // If not set manually, we have to create a unique notification ID by ourselves. The ID generation relies on the current browser\n        // datetime in ms, in praticular the moment this notification gets constructed. Concurrency, and thus two IDs being the exact same,\n        // is not possible due to the action queue concept.\n        if (options.id === undefined) {\n            this.id = \"ID_\" + new Date().getTime();\n        }\n    }\n    return NotifierNotification;\n}());\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nexport { NotifierNotification };\nfunction NotifierNotification_tsickle_Closure_declarations() {\n    /**\n     * Unique notification ID, can be set manually to control the notification from outside later on\n     * @type {?}\n     */\n    NotifierNotification.prototype.id;\n    /**\n     * Notification type, will be used for constructing an appropriate class name\n     * @type {?}\n     */\n    NotifierNotification.prototype.type;\n    /**\n     * Notification message\n     * @type {?}\n     */\n    NotifierNotification.prototype.message;\n    /**\n     * Component reference of this notification, created and set during creation time\n     * @type {?}\n     */\n    NotifierNotification.prototype.component;\n}\n/**\n * Notifiction options\n *\n * This interface describes which information are needed to create a new notification, or in other words, which information the external API\n * call must provide.\n * @record\n */\nexport function NotifierNotificationOptions() { }\nfunction NotifierNotificationOptions_tsickle_Closure_declarations() {\n    /**\n     * Notification ID, optional\n     * @type {?|undefined}\n     */\n    NotifierNotificationOptions.prototype.id;\n    /**\n     * Notification type\n     * @type {?}\n     */\n    NotifierNotificationOptions.prototype.type;\n    /**\n     * Notificatin message\n     * @type {?}\n     */\n    NotifierNotificationOptions.prototype.message;\n}\n//# sourceMappingURL=notifier-notification.model.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { NotifierContainerComponent } from './components/notifier-container.component';\nimport { NotifierNotificationComponent } from './components/notifier-notification.component';\nimport { NotifierConfig } from './models/notifier-config.model';\nimport { NotifierAnimationService } from './services/notifier-animation.service';\nimport { NotifierQueueService } from './services/notifier-queue.service';\nimport { NotifierService } from './services/notifier.service';\n/**\n * Injection Token for notifier options\n */\nexport var /** @type {?} */ NotifierOptionsToken = new InjectionToken('[angular-notifier] Notifier Options');\n/**\n * Injection Token for notifier configuration\n */\nexport var /** @type {?} */ NotifierConfigToken = new InjectionToken('[anuglar-notifier] Notifier Config');\n/**\n * Factory for a notifier configuration with custom options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @param {?} options - Custom notifier options\n * @return {?} - Notifier configuration as result\n */\nexport function notifierCustomConfigFactory(options) {\n    return new NotifierConfig(options);\n}\n/**\n * Factory for a notifier configuration with default options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @return {?} - Notifier configuration as result\n */\nexport function notifierDefaultConfigFactory() {\n    return new NotifierConfig({});\n}\n/**\n * Notifier module\n */\nvar NotifierModule = /** @class */ (function () {\n    function NotifierModule() {\n    }\n    /**\n     * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n     *\n     * @param {?=} options\n     * @return {?} - Notifier module with custom providers\n     */\n    NotifierModule.withConfig = /**\n     * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n     *\n     * @param {?=} options\n     * @return {?} - Notifier module with custom providers\n     */\n    function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: NotifierModule,\n            providers: [\n                // Provide the options itself upfront (as we need to inject them as dependencies -- see below)\n                {\n                    provide: NotifierOptionsToken,\n                    useValue: options\n                },\n                // Provide a custom notifier configuration, based on the given notifier options\n                {\n                    deps: [\n                        NotifierOptionsToken\n                    ],\n                    provide: NotifierConfigToken,\n                    useFactory: notifierCustomConfigFactory\n                }\n            ]\n        };\n    };\n    NotifierModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NotifierContainerComponent,\n                        NotifierNotificationComponent\n                    ],\n                    exports: [\n                        NotifierContainerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    providers: [\n                        NotifierAnimationService,\n                        NotifierService,\n                        NotifierQueueService,\n                        // Provide the default notifier configuration if just the module is imported\n                        {\n                            provide: NotifierConfigToken,\n                            useFactory: notifierDefaultConfigFactory\n                        }\n                    ]\n                },] },\n    ];\n    return NotifierModule;\n}());\nexport { NotifierModule };\n//# sourceMappingURL=notifier.module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from '@angular/core';\nimport { fade } from './../animation-presets/fade.animation-preset';\nimport { slide } from './../animation-presets/slide.animation-preset';\n/**\n * Notifier animation service\n */\nvar NotifierAnimationService = /** @class */ (function () {\n    function NotifierAnimationService() {\n        this.animationPresets = {\n            fade: fade,\n            slide: slide\n        };\n    }\n    /**\n     * Get animation data\n     *\n     * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n     * direction (either in or out) as well as the notifications (and its attributes) itself.\n     *\n     * @param {?} direction    Animation direction, either in or out\n     * @param {?} notification Notification the animation data should be generated for\n     * @return {?} Animation information\n     */\n    NotifierAnimationService.prototype.getAnimationData = /**\n     * Get animation data\n     *\n     * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n     * direction (either in or out) as well as the notifications (and its attributes) itself.\n     *\n     * @param {?} direction    Animation direction, either in or out\n     * @param {?} notification Notification the animation data should be generated for\n     * @return {?} Animation information\n     */\n    function (direction, notification) {\n        // Get all necessary animation data\n        var /** @type {?} */ keyframes;\n        var /** @type {?} */ duration;\n        var /** @type {?} */ easing;\n        if (direction === 'show') {\n            keyframes = this.animationPresets[notification.component.getConfig().animations.show.preset].show(notification);\n            duration = notification.component.getConfig().animations.show.speed;\n            easing = notification.component.getConfig().animations.show.easing;\n        }\n        else {\n            keyframes = this.animationPresets[notification.component.getConfig().animations.hide.preset].hide(notification);\n            duration = notification.component.getConfig().animations.hide.speed;\n            easing = notification.component.getConfig().animations.hide.easing;\n        }\n        // Build and return animation data\n        return {\n            keyframes: [\n                keyframes.from,\n                keyframes.to\n            ],\n            options: {\n                duration: duration,\n                easing: easing,\n                fill: 'forwards' // Keep the newly painted state after the animation finished\n            }\n        };\n    };\n    NotifierAnimationService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierAnimationService.ctorParameters = function () { return []; };\n    return NotifierAnimationService;\n}());\nexport { NotifierAnimationService };\nfunction NotifierAnimationService_tsickle_Closure_declarations() {\n    /**\n     * List of animation presets (currently static)\n     * @type {?}\n     */\n    NotifierAnimationService.prototype.animationPresets;\n}\n//# sourceMappingURL=notifier-animation.service.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * Notifier queue service\n *\n * In general, API calls don't get processed right away. Instead, we have to queue them up in order to prevent simultanious API calls\n * interfering with each other. This, at least in theory, is possible at any time. In particular, animations - which potentially overlap -\n * can cause changes in JS classes as well as affect the DOM. Therefore, the queue service takes all actions, puts them in a queue, and\n * processes them at the right time (which is when the previous action has been processed successfully).\n *\n * Technical sidenote:\n * An action looks pretty similar to the ones within the Flux / Redux pattern.\n */\nvar NotifierQueueService = /** @class */ (function () {\n    function NotifierQueueService() {\n        this.actionStream = new Subject();\n        this.actionQueue = [];\n        this.isActionInProgress = false;\n    }\n    /**\n     * Push a new action to the queue, and try to run it\n     *\n     * @param {?} action Action object\n     * @return {?}\n     */\n    NotifierQueueService.prototype.push = /**\n     * Push a new action to the queue, and try to run it\n     *\n     * @param {?} action Action object\n     * @return {?}\n     */\n    function (action) {\n        this.actionQueue.push(action);\n        this.tryToRunNextAction();\n    };\n    /**\n     * Continue with the next action (called when the current action is finished)\n     * @return {?}\n     */\n    NotifierQueueService.prototype.continue = /**\n     * Continue with the next action (called when the current action is finished)\n     * @return {?}\n     */\n    function () {\n        this.isActionInProgress = false;\n        this.tryToRunNextAction();\n    };\n    /**\n     * Try to run the next action in the queue; we skip if there already is some action in progress, or if there is no action left\n     * @return {?}\n     */\n    NotifierQueueService.prototype.tryToRunNextAction = /**\n     * Try to run the next action in the queue; we skip if there already is some action in progress, or if there is no action left\n     * @return {?}\n     */\n    function () {\n        if (this.isActionInProgress || this.actionQueue.length === 0) {\n            return; // Skip (the queue can now go drink a coffee as it has nothing to do anymore)\n        }\n        this.isActionInProgress = true;\n        this.actionStream.next(this.actionQueue.shift()); // Push next action to the stream, and remove the current action from the queue\n    };\n    NotifierQueueService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierQueueService.ctorParameters = function () { return []; };\n    return NotifierQueueService;\n}());\nexport { NotifierQueueService };\nfunction NotifierQueueService_tsickle_Closure_declarations() {\n    /**\n     * Stream of actions, subscribable from outside\n     * @type {?}\n     */\n    NotifierQueueService.prototype.actionStream;\n    /**\n     * Queue of actions\n     * @type {?}\n     */\n    NotifierQueueService.prototype.actionQueue;\n    /**\n     * Flag, true if some action is currently in progress\n     * @type {?}\n     */\n    NotifierQueueService.prototype.isActionInProgress;\n}\n//# sourceMappingURL=notifier-queue.service.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from '@angular/core';\n/**\n * Notifier timer service\n *\n * This service acts as a timer, needed due to the still rather limited setTimeout JavaScript API. The timer service can start and stop a\n * timer. Furthermore, it can also pause the timer at any time, and resume later on. The timer API workd promise-based.\n */\nvar NotifierTimerService = /** @class */ (function () {\n    function NotifierTimerService() {\n        this.now = 0;\n        this.remaining = 0;\n    }\n    /**\n     * Start (or resume) the timer\n     *\n     * @param {?} duration Timer duration, in ms\n     * @return {?} Promise, resolved once the timer finishes\n     */\n    NotifierTimerService.prototype.start = /**\n     * Start (or resume) the timer\n     *\n     * @param {?} duration Timer duration, in ms\n     * @return {?} Promise, resolved once the timer finishes\n     */\n    function (duration) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            // For the first run ...\n            // For the first run ...\n            _this.remaining = duration;\n            // Setup, then start the timer\n            // Setup, then start the timer\n            _this.finishPromiseResolver = resolve;\n            _this.continue();\n        });\n    };\n    /**\n     * Pause the timer\n     * @return {?}\n     */\n    NotifierTimerService.prototype.pause = /**\n     * Pause the timer\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timerId);\n        this.remaining -= new Date().getTime() - this.now;\n    };\n    /**\n     * Continue the timer\n     * @return {?}\n     */\n    NotifierTimerService.prototype.continue = /**\n     * Continue the timer\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.now = new Date().getTime();\n        this.timerId = window.setTimeout(function () {\n            _this.finish();\n        }, this.remaining);\n    };\n    /**\n     * Stop the timer\n     * @return {?}\n     */\n    NotifierTimerService.prototype.stop = /**\n     * Stop the timer\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timerId);\n        this.remaining = 0;\n    };\n    /**\n     * Finish up the timeout by resolving the timer promise\n     * @return {?}\n     */\n    NotifierTimerService.prototype.finish = /**\n     * Finish up the timeout by resolving the timer promise\n     * @return {?}\n     */\n    function () {\n        this.finishPromiseResolver();\n    };\n    NotifierTimerService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierTimerService.ctorParameters = function () { return []; };\n    return NotifierTimerService;\n}());\nexport { NotifierTimerService };\nfunction NotifierTimerService_tsickle_Closure_declarations() {\n    /**\n     * Timestamp (in ms), created in the moment the timer starts\n     * @type {?}\n     */\n    NotifierTimerService.prototype.now;\n    /**\n     * Remaining time (in ms)\n     * @type {?}\n     */\n    NotifierTimerService.prototype.remaining;\n    /**\n     * Timeout ID, used for clearing the timeout later on\n     * @type {?}\n     */\n    NotifierTimerService.prototype.timerId;\n    /**\n     * Promise resolve function, eventually getting called once the timer finishes\n     * @type {?}\n     */\n    NotifierTimerService.prototype.finishPromiseResolver;\n}\n//# sourceMappingURL=notifier-timer.service.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Inject, Injectable, forwardRef } from '@angular/core';\nimport { NotifierConfig } from './../models/notifier-config.model';\nimport { NotifierQueueService } from './notifier-queue.service';\nimport { NotifierConfigToken } from './../notifier.module';\n/**\n * Notifier service\n *\n * This service provides access to the public notifier API. Once injected into a component, directive, pipe, service, or any other building\n * block of an applications, it can be used to show new notifications, and hide existing ones. Internally, it transforms API calls into\n * actions, which then get thrown into the action queue - eventually being processed at the right moment.\n */\nvar NotifierService = /** @class */ (function () {\n    function NotifierService(notifierQueueService, config // The forwardRef is (sadly) required here\n    ) {\n        this.queueService = notifierQueueService;\n        this.config = config;\n    }\n    /**\n     * Get the notifier configuration\n     *\n     * @return {?} Notifier configuration\n     */\n    NotifierService.prototype.getConfig = /**\n     * Get the notifier configuration\n     *\n     * @return {?} Notifier configuration\n     */\n    function () {\n        return this.config;\n    };\n    /**\n     * API: Show a new notification\n     *\n     * @param {?} notificationOptions Notification options\n     * @return {?}\n     */\n    NotifierService.prototype.show = /**\n     * API: Show a new notification\n     *\n     * @param {?} notificationOptions Notification options\n     * @return {?}\n     */\n    function (notificationOptions) {\n        this.queueService.push({\n            payload: notificationOptions,\n            type: 'SHOW'\n        });\n    };\n    /**\n     * API: Hide a specific notification, given its ID\n     *\n     * @param {?} notificationId ID of the notification to hide\n     * @return {?}\n     */\n    NotifierService.prototype.hide = /**\n     * API: Hide a specific notification, given its ID\n     *\n     * @param {?} notificationId ID of the notification to hide\n     * @return {?}\n     */\n    function (notificationId) {\n        this.queueService.push({\n            payload: notificationId,\n            type: 'HIDE'\n        });\n    };\n    /**\n     * API: Hide the newest notification\n     * @return {?}\n     */\n    NotifierService.prototype.hideNewest = /**\n     * API: Hide the newest notification\n     * @return {?}\n     */\n    function () {\n        this.queueService.push({\n            type: 'HIDE_NEWEST'\n        });\n    };\n    /**\n     * API: Hide the oldest notification\n     * @return {?}\n     */\n    NotifierService.prototype.hideOldest = /**\n     * API: Hide the oldest notification\n     * @return {?}\n     */\n    function () {\n        this.queueService.push({\n            type: 'HIDE_OLDEST'\n        });\n    };\n    /**\n     * API: Hide all notifications at once\n     * @return {?}\n     */\n    NotifierService.prototype.hideAll = /**\n     * API: Hide all notifications at once\n     * @return {?}\n     */\n    function () {\n        this.queueService.push({\n            type: 'HIDE_ALL'\n        });\n    };\n    /**\n     * API: Shortcut for showing a new notification\n     *\n     * @param {?} type             Type of the notification\n     * @param {?} message          Message of the notification\n     * @param {?=} notificationId\n     * @return {?}\n     */\n    NotifierService.prototype.notify = /**\n     * API: Shortcut for showing a new notification\n     *\n     * @param {?} type             Type of the notification\n     * @param {?} message          Message of the notification\n     * @param {?=} notificationId\n     * @return {?}\n     */\n    function (type, message, notificationId) {\n        var /** @type {?} */ notificationOptions = {\n            message: message,\n            type: type\n        };\n        if (notificationId !== undefined) {\n            notificationOptions.id = notificationId;\n        }\n        this.show(notificationOptions);\n    };\n    NotifierService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NotifierService.ctorParameters = function () { return [\n        { type: NotifierQueueService },\n        { type: NotifierConfig, decorators: [{ type: Inject, args: [forwardRef(function () { return NotifierConfigToken; }),] }] }\n    ]; };\n    return NotifierService;\n}());\nexport { NotifierService };\nfunction NotifierService_tsickle_Closure_declarations() {\n    /**\n     * Notifier queue service\n     * @type {?}\n     */\n    NotifierService.prototype.queueService;\n    /**\n     * Notifier configuration\n     * @type {?}\n     */\n    NotifierService.prototype.config;\n}\n//# sourceMappingURL=notifier.service.js.map","import { HttpParams } from \"@angular/common/http\";\r\n\r\nexport class CustomHttpParams extends HttpParams {\r\n    constructor(public isCaching: boolean) {\r\n        super();\r\n    }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Component({\r\n    selector: 'action-button',\r\n    template:\r\n        ` \r\n        <div class=\"panel__layout\" *ngIf=\"isPending && loaderPositionRight === false\">\r\n            <div class=\"loader loader--large\">\r\n                <svg class=\"loader__svg\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\"\r\n                    viewBox=\"0 0 40 40\" enable-background=\"new 0 0 40 40\" xml:space=\"preserve\">\r\n                    <path class=\"loader__cyrcle\" d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\r\n                        s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\r\n                        c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"></path>\r\n                    <path class=\"loader__runner\" d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\r\n                            C22.32,8.481,24.301,9.057,26.013,10.047z\" transform=\"rotate(82.3618 20 20)\">\r\n                        <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 20 20\" to=\"360 20 20\" dur=\"0.5s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    </path>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel__layout shrink\">\r\n            <button class=\"button\" [ngClass]=\"className\" type=\"button\" (click)=\"onClick()\" [disabled]=\"isPending || isDisabled\">\r\n                {{ title }}\r\n                <ng-content></ng-content>\r\n            </button>\r\n        </div>\r\n        <div class=\"panel__layout\" *ngIf=\"isPending && loaderPositionRight === true\">\r\n            <div class=\"loader loader--large\">\r\n                <svg class=\"loader__svg\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\"\r\n                    viewBox=\"0 0 40 40\" enable-background=\"new 0 0 40 40\" xml:space=\"preserve\">\r\n                    <path class=\"loader__cyrcle\" d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\r\n                        s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\r\n                        c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"></path>\r\n                    <path class=\"loader__runner\" d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\r\n                            C22.32,8.481,24.301,9.057,26.013,10.047z\" transform=\"rotate(82.3618 20 20)\">\r\n                        <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 20 20\" to=\"360 20 20\" dur=\"0.5s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    </path>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    `,\r\n    host: { class: 'panel shrink' }\r\n})\r\nexport class ActionButtonComponent {\r\n    @Input() title: string;\r\n    @Input() errorText: string;\r\n    @Input() className: string;\r\n    @Input() action: Function;\r\n    @Input() isDisabled: boolean = false;\r\n    @Input() loaderPositionRight: boolean = false;\r\n    public isPending: boolean = false;\r\n\r\n    constructor(\r\n        private notifier: NotifierService,\r\n    ) {}\r\n\r\n    public async onClick(): Promise<void> {\r\n        this.isPending = true;\r\n        this.action().subscribe(\r\n            (e) => {\r\n            this.isPending = false;\r\n            },\r\n            (e) => {\r\n                this.isPending = false;\r\n                this.notifier.notify('error', this.errorText || e.error.api_errors[0].msg);\r\n            }\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"layout__block shrink\\\" *ngIf=\\\"options\\\">\\r\\n    <div class=\\\"filter\\\" [class.filter--active]=\\\"isFilter\\\">\\r\\n        <div class=\\\"filter__layout\\\">\\r\\n            <div class=\\\"filter__column column\\\">\\r\\n                <div class=\\\"filter__col column__col column__col--1\\\" *ngIf=\\\"options.labels\\\">\\r\\n                    <label class=\\\"label\\\">\\r\\n                        <div class=\\\"label__title\\\">\\r\\n                            {{ options.labels.title || 'Метки'}}:\\r\\n                        </div>\\r\\n                        <select class=\\\"label__item select\\\" [(ngModel)]=\\\"state.filter['labels']\\\">\\r\\n                            <option value=\\\"\\\">Любой</option>\\r\\n                            <option value=\\\"{{label.id}}\\\" *ngFor=\\\"let label of state.filterData.labels\\\">\\r\\n                                {{label.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"filter__col column__col column__col--1\\\" *ngIf=\\\"options.from_bot\\\">\\r\\n                    <label class=\\\"label\\\">\\r\\n                        <div class=\\\"label__title\\\">\\r\\n                            {{ options.from_bot.title || 'Боты'}}:\\r\\n                        </div>\\r\\n                        <select class=\\\"label__item select\\\" [(ngModel)]=\\\"state.filter['from_bot']\\\">\\r\\n                            <option value=\\\"\\\">Любой</option>\\r\\n                            <option value=\\\"{{bot.id}}\\\" *ngFor=\\\"let bot of state.filterData.bots\\\">\\r\\n                                {{bot.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"filter__col column__col column__col--1\\\" *ngIf=\\\"options.author\\\">\\r\\n                    <label class=\\\"label\\\">\\r\\n                        <div class=\\\"label__title\\\">\\r\\n                            {{ options.author.title || 'Автор'}}:\\r\\n                        </div>\\r\\n                        <select class=\\\"label__item select\\\" [(ngModel)]=\\\"state.filter[options.author.path || 'from_bot__owner']\\\">\\r\\n                            <option value=\\\"\\\">Любой</option>\\r\\n                            <option value=\\\"{{user.id}}\\\" *ngFor=\\\"let user of state.filterData.users\\\">\\r\\n                                {{user.first_name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"filter__layout shrink\\\">\\r\\n            <div class=\\\"label label--no-title shrink\\\">\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <div class=\\\"panel__layout\\\">\\r\\n                        <button class=\\\"button bold\\\" type=\\\"button\\\" (click)=\\\"filter()\\\" [disabled]=\\\"isPending.state\\\">\\r\\n                            Применить\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel__layout\\\">\\r\\n                        <a class=\\\"link\\\" (click)=\\\"clear()\\\">Сброс</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { AppState, InternalStateType } from '../../../../../app.service';\r\nimport { FilterDataService } from './filter.data.service';\r\nimport { FilterService } from './filter.service';\r\nimport { DataService } from '../../services';\r\nimport { Data } from '../../models';\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n// TO-DO продумать механизм фильтрации по умолчанию\r\n@Component({\r\n    selector: 'filter',\r\n    templateUrl: './filter.component.html',\r\n    host: { class: 'layout__block shrink' }\r\n\r\n})\r\nexport class FilterComponent implements OnInit, OnDestroy {\r\n    @Input() public options: any;\r\n    @Input() public data: Data = new Data();\r\n    @Input() public url: string;\r\n    @Input() public isPending: { state: boolean } = { state: false };\r\n    public state: InternalStateType;\r\n    public isFilter: boolean = true;\r\n\r\n    constructor(\r\n        public appState: AppState,\r\n        public filterDataService: FilterDataService,\r\n        public filterService: FilterService,\r\n        public dataService: DataService\r\n    ) {\r\n        this.state = this.appState.state;\r\n    }\r\n\r\n    /**\r\n     * Initialize filter with options fields and get filter fields\r\n     */\r\n    public ngOnInit(): void {\r\n        if (!this.state.filter) {\r\n            this.state.filter = {}\r\n        }\r\n\r\n        for (let key in this.options) {\r\n            if (this.state.filter.hasOwnProperty(key)) {\r\n                this.state.filter[key] = '';\r\n            } else {\r\n                this.state.filter[key] = '';\r\n            }\r\n        }\r\n\r\n        console.log(this.state.filter)\r\n\r\n\r\n        if (this.options) {\r\n            this.filterDataService.getFilterFields();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.options = {};\r\n        this.state.filter = {};\r\n    }\r\n\r\n    public filter(): void {\r\n        let filters = this.filterService.getFilterQuery();\r\n        this.isPending.state = true;\r\n\r\n        this.dataService.get(this.url, filters).subscribe((res) => {\r\n            this.data.response = res;\r\n            this.isPending.state = false;\r\n        },\r\n            (err) => {\r\n                this.isPending.state = false;\r\n                this.data = new Data();\r\n            });\r\n    }\r\n\r\n    public onKeySearch(event: any) {\r\n        if (event.keyCode === 13) {\r\n            this.filter();\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        for (let key in this.state.filter) {\r\n            if (this.state.filter.hasOwnProperty(key)) {\r\n                this.state.filter[key] = '';\r\n            }\r\n        }\r\n        this.filter();\r\n    }\r\n\r\n    public toggleFilter(): void {\r\n        this.isFilter = !this.isFilter;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppState, InternalStateType } from '../../../../../app.service';\r\n\r\n// TO-DO переписать\r\n@Injectable()\r\nexport class FilterDataService {\r\n    public state: InternalStateType;\r\n\r\n    constructor(\r\n        public appState: AppState,\r\n        public http: HttpClient\r\n    ) {\r\n        this.state = this.appState.state;\r\n    }\r\n\r\n    public getFilterFields() {\r\n        this.state.filterData = {};\r\n        this.getLabels();\r\n        this.getBots();\r\n        this.getUsers();\r\n    }\r\n\r\n\r\n    public getLabels(): void {\r\n        if (!this.state.filterData.statuses) {\r\n            this.http.get('/labels')\r\n                .subscribe((labels: any) => {\r\n                    this.state.filterData.labels = labels.results;\r\n                });\r\n        }\r\n    }\r\n\r\n    public getBots(): void {\r\n        if (!this.state.filterData.bots) {\r\n            this.http.get('/telegram/bots?page_size=100')\r\n                .subscribe((bots: any) => {\r\n                    this.state.filterData.bots = bots.results;\r\n                });\r\n        }\r\n    }\r\n\r\n    public getUsers(): void {\r\n        if (!this.state.filterData.users) {\r\n            this.http.get('/users')\r\n                .subscribe((users: any) => {\r\n                    this.state.filterData.users = users.results;\r\n                });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { URLSearchParams } from '@angular/http';\r\nimport { AppState, InternalStateType } from '../../../../../app.service';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n    public state: InternalStateType;\r\n\r\n    constructor(\r\n        public appState: AppState\r\n    ) {\r\n        this.state = this.appState.state;\r\n    }\r\n\r\n    /**\r\n     * Returns query string from filter params\r\n     */\r\n    public getFilterQuery(): string {\r\n        let params = new URLSearchParams();\r\n\r\n        for (let key in this.state.filter) {\r\n            if (this.state.filter[key] !== null\r\n                && this.state.filter[key] !== undefined\r\n                && this.state.filter[key] !== '' ) {\r\n                    if (key === 'is_repost' && this.state.filter[key] == '1') {\r\n                        \r\n                    } else {\r\n                        params.set(key, this.state.filter[key]);\r\n                    }\r\n            }\r\n        }\r\n\r\n        return params.toString();\r\n    }\r\n}\r\n","export * from './filter.component';\r\nexport * from './filter.service';\r\nexport * from './filter.data.service';\r\n","module.exports = \"<filter\\r\\n    [options]=\\\"filters\\\"\\r\\n    [url]=\\\"url\\\"\\r\\n    [data]=\\\"data\\\"\\r\\n    [isPending]=\\\"isPending\\\"\\r\\n    *ngIf=\\\"isFilter\\\"\\r\\n>\\r\\n</filter>\\r\\n<div class=\\\"layout__block shrink\\\">\\r\\n    <div class=\\\"control-bar control-bar--sub\\\">\\r\\n        <div class=\\\"control-bar__layout\\\">\\r\\n            <div class=\\\"panel shrink\\\">\\r\\n                <div class=\\\"panel__layout\\\" *ngIf=\\\"filters\\\">\\r\\n                    <button class=\\\"button\\\" type=\\\"button\\\" (click)=\\\"toggleFilter()\\\">\\r\\n                        <span *ngIf=\\\"isFilter\\\">Фильтр скрыть</span>\\r\\n                        <span *ngIf=\\\"!isFilter\\\">Фильтр показать</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"panel__layout\\\">\\r\\n                    <div class=\\\"search\\\">\\r\\n                        <input \\r\\n                            class=\\\"search__input\\\"\\r\\n                            type=\\\"search\\\"\\r\\n                            [placeholder]=\\\"filters?.searchTitle || 'Название'\\\"\\r\\n                            (keyup)=\\\"onKeySearch($event)\\\"\\r\\n                            [(ngModel)]=\\\"searchText\\\"\\r\\n                        >\\r\\n                        <button class=\\\"search__button button\\\" (click)=\\\"onKeySearch({keyCode: 13})\\\" type=\\\"button\\\">\\r\\n                            <span class=\\\"button__icon icon icon--baseline\\\">\\r\\n                                <svg class=\\\"icon__svg\\\" viewBox=\\\"0 0 2134 2134\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n                                    <path id=\\\"search\\\" d=\\\"M1443.5,915.975c0,-145.262 -51.616,-269.508 -154.847,-372.739c-103.231,-103.231 -227.477,-154.846 -372.739,-154.846c-145.262,0 -269.508,51.615 -372.739,154.846c-103.231,103.231 -154.846,227.477 -154.846,372.739c0,145.262 51.615,269.508 154.846,372.739c103.231,103.231 227.477,154.846 372.739,154.846c145.262,0 269.508,-51.615 372.739,-154.846c103.231,-103.231 154.847,-227.477 154.847,-372.739Zm602.964,979.792c0,40.844 -14.927,76.17 -44.779,105.979c-29.853,29.808 -65.179,44.735 -105.979,44.779c-42.383,0 -77.709,-14.927 -105.979,-44.779l-403.932,-402.746c-140.514,97.34 -297.141,146.01 -469.881,146.01c-112.288,0 -219.651,-21.785 -322.091,-65.355c-102.439,-43.57 -190.766,-102.462 -264.979,-176.675c-74.214,-74.214 -133.106,-162.54 -176.676,-264.98c-43.569,-102.439 -65.354,-209.803 -65.354,-322.091c0,-112.288 21.785,-219.651 65.354,-322.091c43.57,-102.439 102.462,-190.766 176.676,-264.979c74.213,-74.214 162.54,-133.106 264.979,-176.676c102.44,-43.569 209.803,-65.354 322.091,-65.354c112.288,0 219.652,21.785 322.091,65.354c102.44,43.57 190.766,102.462 264.98,176.676c74.213,74.213 133.105,162.54 176.675,264.979c43.57,102.44 65.355,209.803 65.355,322.091c0,172.74 -48.67,329.367 -146.01,469.881l403.933,403.932c29.061,29.062 43.592,64.388 43.592,105.979l-0.066,0.066Z\\\"\\r\\n                                        style=\\\"fill-rule:nonzero;\\\" />\\r\\n                                </svg>\\r\\n                            </span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"panel__layout\\\">\\r\\n                    Найдено:\\r\\n                    <span className=\\\"sub-text sub-text--primary\\\">{{ data.response?.count }}</span>\\r\\n                </div>\\r\\n                <div class=\\\"panel__layout\\\" *ngIf=\\\"this.selectedRow.length\\\">\\r\\n                    Выделено:\\r\\n                    <span class=\\\"sub-text sub-text--primary\\\">{{this.selectedRow.length | number}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"control-bar__layout align-right\\\">\\r\\n            <pagination *ngIf=\\\"!hidePagination\\\" [data]=\\\"data\\\" [url]=\\\"url\\\" [selectedRow]=\\\"selectedRow\\\" [isPending]=\\\"isPending\\\">\\r\\n            </pagination>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"layout__container\\\">\\r\\n    <table class=\\\"table\\\" [class.table--load]=\\\"isPending.state\\\">\\r\\n        <thead class=\\\"table__thead\\\">\\r\\n            <tr class=\\\"table__row\\\">\\r\\n                <th class=\\\"table__td\\\" *ngFor=\\\"let column of columns\\\">\\r\\n                    <span class=\\\"sub-text--tertiary\\\" *ngIf=\\\"!column.ico && !column.sort\\\">{{column.title}}</span>\\r\\n                    <span class=\\\"sub-text--tertiary\\\" *ngIf=\\\"column.ico && !column.sort\\\">\\r\\n                        <img class=\\\"icon__svg\\\" [src]=\\\"column.ico\\\">\\r\\n                    </span>\\r\\n                    <span *ngIf=\\\"column.sort\\\" [ngClass]=\\\"column.sort === 'asc' ? 'link link--asc' : 'link link--desc'\\\" (click)=\\\"column.sort = sort(column.sort, column.name)\\\">\\r\\n                        <img *ngIf=\\\"column.ico\\\" class=\\\"icon__svg\\\" [src]=\\\"column.ico\\\"> {{column.title}}\\r\\n                    </span>\\r\\n                    <input class=\\\"checkbox\\\" type=\\\"checkbox\\\" [checked]=\\\"isCheckedAll(column)\\\" (click)=\\\"selectAll(selectAllState, column)\\\" *ngIf=\\\"column.checkbox\\\"\\r\\n                        [disabled]=\\\"data.response.results.length === 0 || data.response.notFound\\\">\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody class=\\\"table__tbody\\\">\\r\\n            <tr class=\\\"table__row table__row--loader\\\">\\r\\n                <td class=\\\"table__td\\\" [attr.colspan]=\\\"columns.length\\\">\\r\\n                    <div class=\\\"table-loader\\\" [class.table-loader--load]=\\\"isPending.state\\\">\\r\\n                        <div class=\\\"table-loader__layout table-loader__layout--loader\\\">\\r\\n                            <div class=\\\"panel shrink\\\">\\r\\n                                <div class=\\\"panel__layout\\\">\\r\\n                                    <div class=\\\"table-loader__loader loader\\\">\\r\\n                                        <svg class=\\\"loader__svg\\\" version=\\\"1.1\\\" id=\\\"loader-1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"24px\\\" height=\\\"24px\\\"\\r\\n                                            viewBox=\\\"0 0 40 40\\\" enable-background=\\\"new 0 0 40 40\\\" xml:space=\\\"preserve\\\">\\r\\n                                            <path class=\\\"loader__cyrcle\\\" d=\\\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\\r\\n                                            s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\\r\\n                                            c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\\\"\\r\\n                                            />\\r\\n                                            <path class=\\\"loader__runner\\\" d=\\\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\\r\\n                                                C22.32,8.481,24.301,9.057,26.013,10.047z\\\">\\r\\n                                                <animateTransform attributeType=\\\"xml\\\" attributeName=\\\"transform\\\" type=\\\"rotate\\\" from=\\\"0 20 20\\\" to=\\\"360 20 20\\\" dur=\\\"0.5s\\\" repeatCount=\\\"indefinite\\\"\\r\\n                                                />\\r\\n                                            </path>\\r\\n                                        </svg>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"panel__layout shrink\\\">\\r\\n                                    Загрузка&hellip;\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr class=\\\"table__row\\\" *ngIf=\\\"!isPending.state && data.response.notFound\\\">\\r\\n                <td class=\\\"table__td\\\" [attr.colspan]=\\\"columns.length\\\">\\r\\n                    <div class=\\\"table-loader__layout\\\">\\r\\n                        Нет данных\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr class=\\\"table__row\\\" *ngFor=\\\"let item of data.response.results\\\" [class.table__row--content]=\\\"isPending.state\\\">\\r\\n                <td class=\\\"table__td\\\" *ngFor=\\\"let column of columns\\\">\\r\\n                    <div *ngIf=\\\"column.checkbox\\\">\\r\\n                        <input class=\\\"checkbox\\\" type=\\\"checkbox\\\" *ngIf=\\\"!column.isShow ? true : column.isShow(item)\\\" (click)=\\\"onCheck(item.id)\\\" [checked]=\\\"isChecked(item.id)\\\">\\r\\n                    </div>\\r\\n                    <template-wrapper *ngIf=\\\"column.template\\\" [template]=\\\"column.template\\\" [model]=\\\"item\\\" [callback]=\\\"column.callback\\\" [stageName]=\\\"column.stageName\\\"></template-wrapper>\\r\\n                    <div *ngIf=\\\"!column.template\\\" [ngClass]=\\\"column.className\\\">{{getProps(item, column.name, column.type)}}</div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","module.exports = \"\"","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    OnInit,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { DataService } from '../../services';\r\nimport { Data } from '../../models';\r\nimport { Utils } from '../../utils';\r\nimport { AppState, InternalStateType } from '../../../../../app.service';\r\nimport { FilterService } from '../filter';\r\n\r\n@Component({\r\n    selector: 'grid',\r\n    templateUrl: './grid.component.html',\r\n    styleUrls: ['./grid.component.scss'],\r\n    host: { class: 'layout__block' },\r\n    providers: [DataService]\r\n})\r\n\r\nexport class GridComponent implements OnInit, OnChanges {\r\n    @Input() public filters: any;\r\n    @Input() public url: string;\r\n    @Input() public columns: any[] = [];\r\n    @Input() public list: any[];\r\n    // TO-DO продумать механизм фильтрации по умолчанию\r\n    @Input() public defaultFilter: string;\r\n    @Input() public hidePagination: boolean;\r\n    @Input() public selectedRow: any[] = [];\r\n    @Input() public isFilter: boolean = false;\r\n    @Output() public isPending: { state: boolean } = { state: false };\r\n    public data: Data = new Data();\r\n    public searchText: string = '';\r\n    public selectAllState: boolean = false;\r\n    public state: InternalStateType;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private utils: Utils,\r\n        public appState: AppState,\r\n        public filterService: FilterService,\r\n    ) {\r\n        this.state = this.appState.state;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.url) {\r\n            this.data.response.results = this.list;\r\n        } else if (this.url) {\r\n            let currentFilter: any = this.getFilter();\r\n            let filter: any = currentFilter || this.defaultFilter;\r\n\r\n            this.get(filter);\r\n        }\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.list && changes.list.currentValue) {\r\n            this.data.response.results = changes.list.currentValue;\r\n        } else if (changes.url && changes.url.currentValue) {\r\n            this.url = changes.url.currentValue;\r\n            let currentFilter: any = this.getFilter();\r\n            let filter: any = currentFilter || this.defaultFilter;\r\n\r\n            this.get(filter);\r\n        }\r\n    }\r\n\r\n    // впадлу было заморачиваться, отрефакторить логику работы с чекбоксами\r\n    public isCheckedAll(columnOptions: any) {\r\n        let isChecked: boolean = this.selectedRow.length === 0 ? false : true;\r\n\r\n        this.data.response.results\r\n            .map((e) => {\r\n                let index = this.selectedRow.indexOf(e.id, 0);\r\n\r\n                if (columnOptions.isShow) {\r\n                    if (index === -1 && columnOptions.isShow(e)) {\r\n                        isChecked = false;\r\n                    } else if (index !== -1 && !columnOptions.isShow(e)) {\r\n                        isChecked = false;\r\n                    }\r\n                } else if (index === -1) {\r\n                    isChecked = false;\r\n                }\r\n            });\r\n\r\n        this.selectAllState = isChecked;\r\n\r\n        return this.selectAllState;\r\n    }\r\n\r\n    public toggleFilter(): void {\r\n        this.isFilter = !this.isFilter;\r\n    }\r\n\r\n    public selectAll(selectAllState: boolean, columnOptions: any): void {\r\n        this.selectAllState = !selectAllState;\r\n\r\n        this.data.response.results\r\n            .map((e) => {\r\n                let index = this.selectedRow.indexOf(e.id, 0);\r\n                if (this.selectAllState) {\r\n                    if (columnOptions.isShow && index === -1) {\r\n                        if (columnOptions.isShow(e)) {\r\n                            this.selectedRow.push(e.id);\r\n                        }\r\n                    } else {\r\n                        if (index === -1) {\r\n                            this.selectedRow.push(e.id);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (index > -1) {\r\n                        this.selectedRow.splice(index, 1);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    public isChecked(id: number): boolean {\r\n        return this.utils.contains(this.selectedRow, id);\r\n    }\r\n\r\n    public onCheck(id: number): void {\r\n        let index: number = this.selectedRow.indexOf(id);\r\n        this.selectAllState = false;\r\n\r\n        if (index !== -1) {\r\n            this.selectedRow.splice(index, 1);\r\n        } else {\r\n            this.selectedRow.push(id);\r\n        }\r\n    }\r\n\r\n    public getFilter(): string {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public refresh(): void {\r\n        this.dataService.get(this.url).subscribe((res) => {\r\n            this.data.response = res;\r\n        });\r\n    }\r\n\r\n    // To-do сделать маппинг индекса сортировки\r\n    public sort(sort: string, propName: string): string {\r\n        this.isPending.state = true;\r\n        this.dataService.sort(this.url, sort, propName, this.getFilter(), this.data.response.pagenum)\r\n            .subscribe((res) => {\r\n                this.data.response = res;\r\n                this.isPending.state = false;\r\n            },\r\n                (err) => {\r\n                    this.isPending.state = false;\r\n                    this.data = new Data();\r\n                });\r\n\r\n        return sort === 'desc' ? 'asc' : 'desc';\r\n    }\r\n\r\n    public getProps(item: any, path: string, type: any): string {\r\n        return this.utils.getValueByPath(item, path, type);\r\n    }\r\n\r\n    public onKeySearch(event: any) {\r\n        if (event.keyCode === 13) {\r\n            if (!this.state.filter) {\r\n                this.state.filter = {}\r\n            }\r\n\r\n            this.state.filter.search = this.searchText;\r\n            this.filter();\r\n        }\r\n    }\r\n\r\n    public filter(): void {\r\n        let filters = this.filterService.getFilterQuery();\r\n        this.isPending.state = true;\r\n\r\n        this.dataService.get(this.url, filters).subscribe((res) => {\r\n            this.data.response = res;\r\n            this.isPending.state = false;\r\n        },\r\n            (err) => {\r\n                this.isPending.state = false;\r\n                this.data = new Data();\r\n            });\r\n    }\r\n\r\n    private get(filters?: string): void {\r\n        this.isPending.state = true;\r\n        this.dataService.get(this.url, filters).subscribe((res) => {\r\n            this.data.response = res;\r\n            this.isPending.state = false;\r\n        },\r\n            (err) => {\r\n                this.isPending.state = false;\r\n                this.data = new Data();\r\n            });\r\n    }\r\n}\r\n","export * from './grid.component';\r\nexport * from './template.provider';\r\nexport * from './template.wrapper';\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[template-provider]',\r\n})\r\nexport class TemplateProvider {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    AfterViewInit,\r\n    ViewChild,\r\n    ComponentFactoryResolver,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { TemplateProvider } from './template.provider';\r\nimport { GridTemplate } from '../../models/gridTemplate';\r\n\r\n@Component({\r\n    selector: 'template-wrapper',\r\n    template:\r\n    `\r\n        <div>\r\n           <ng-template template-provider></ng-template>\r\n        </div>\r\n    `\r\n})\r\nexport class TemplateWrapper implements AfterViewInit {\r\n    @Input() public template: any = {};\r\n    @Input() public model: Object = {};\r\n    @Input() public stageName: string = null;\r\n    @Input() public callback: Object = {};\r\n    @ViewChild(TemplateProvider) public host: TemplateProvider;\r\n\r\n    constructor(\r\n        private _componentFactoryResolver: ComponentFactoryResolver,\r\n        private cdRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    public ngAfterViewInit(): void {\r\n        if (this.template) {\r\n            this.loadComponent(this.template);\r\n        }\r\n    }\r\n\r\n    public loadComponent(template): void {\r\n        let componentFactory = this._componentFactoryResolver.resolveComponentFactory(template);\r\n        let viewContainerRef = this.host.viewContainerRef;\r\n\r\n        viewContainerRef.clear();\r\n        let componentRef = viewContainerRef.createComponent(componentFactory);\r\n        (<GridTemplate> componentRef.instance).data = this.model;\r\n        (<GridTemplate> componentRef.instance).stageName = this.stageName;\r\n        (<GridTemplate> componentRef.instance).callback = this.callback;\r\n        this.cdRef.detectChanges();\r\n    }\r\n}\r\n","export * from './grid';\r\nexport * from './pagination';\r\n","export * from './pagination.component';\r\n","module.exports = \"<div class=\\\"pagination\\\">\\r\\n    <div class=\\\"pagination__layout\\\">\\r\\n        <div class=\\\"pagination__counter\\\">\\r\\n            Страница {{data.response.pagenum}}\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"pagination__layout\\\">\\r\\n        <div class=\\\"group-button\\\">\\r\\n            <button class=\\\"group-button__button button button--small-icon\\\" type=\\\"button\\\" (click)=\\\"first()\\\" [disabled]=\\\"data.response.pagenum == 1 || isPending.state\\\">\\r\\n                <span class=\\\"button__icon icon icon--baseline\\\">\\r\\n                    <svg class=\\\"icon__svg\\\" viewBox=\\\"0 0 2134 2134\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n                        <path id=\\\"backward\\\" d=\\\"M1989.12,107.466c16.081,-16.08 29.623,-21.583 40.628,-16.507c11.005,5.075 16.507,18.618 16.507,40.628l0,1870.3c0,22.01 -5.502,35.552 -16.507,40.628c-11.005,5.075 -24.547,-0.427 -40.628,-16.507l-902.136,-902.137c-7.637,-7.637 -13.14,-15.677 -16.508,-24.121l0,902.137c0,22.01 -5.502,35.552 -16.507,40.628c-11.005,5.075 -24.547,-0.427 -40.628,-16.507l-902.136,-902.137c-16.081,-16.08 -24.121,-35.149 -24.121,-57.206c0,-22.057 8.04,-41.126 24.121,-57.207l902.136,-902.136c16.081,-16.081 29.623,-21.583 40.628,-16.508c11.005,5.076 16.507,18.619 16.507,40.628l0,902.137c3.368,-8.491 8.871,-16.531 16.508,-24.121l902.136,-901.994Z\\\" style=\\\"fill-rule:nonzero;\\\"/>\\r\\n                    </svg>\\r\\n                </span>\\r\\n            </button>\\r\\n            <button class=\\\"group-button__button button button--small-icon\\\" type=\\\"button\\\" (click)=\\\"prev()\\\" [disabled]=\\\"!data.response.previous_page_number || isPending.state\\\">\\r\\n                <span class=\\\"button__icon icon icon--baseline\\\">\\r\\n                    <svg class=\\\"icon__svg\\\" viewBox=\\\"0 0 2134 2134\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n                        <path id=\\\"caret-left\\\" d=\\\"M1616,212.173l0,1708.99c0,33.041 -12.069,61.666 -36.209,85.877c-24.139,24.21 -52.765,36.28 -85.877,36.209c-33.111,-0.071 -61.737,-12.141 -85.876,-36.209l-854.494,-854.494c-24.139,-24.139 -36.209,-52.765 -36.209,-85.876c0,-33.112 12.07,-61.738 36.209,-85.877l854.494,-854.494c24.139,-24.139 52.765,-36.209 85.876,-36.209c33.112,0 61.738,12.07 85.877,36.209c24.14,24.14 36.209,52.765 36.209,85.877l0,0Z\\\" style=\\\"fill-rule:nonzero;\\\"/>\\r\\n                    </svg>\\r\\n                </span>\\r\\n            </button>\\r\\n            <button class=\\\"group-button__button button button--small-icon\\\" type=\\\"button\\\" (click)=\\\"next()\\\" [disabled]=\\\"!data.response.next_page_number || isPending.state\\\">\\r\\n                <span class=\\\"button__icon icon icon--baseline\\\">\\r\\n                    <svg class=\\\"icon__svg\\\" viewBox=\\\"0 0 2134 2134\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n                        <path id=\\\"caret-right\\\" d=\\\"M1616,1066.67c0,33.04 -12.07,61.666 -36.209,85.877l-854.495,854.494c-24.139,24.14 -52.765,36.21 -85.877,36.21c-33.111,0 -61.737,-12.07 -85.876,-36.21c-24.14,-24.139 -36.21,-52.765 -36.21,-85.876l0,-1708.99c0,-33.04 12.07,-61.666 36.21,-85.877c24.139,-24.21 52.765,-36.28 85.876,-36.209c33.112,0.071 61.738,12.141 85.877,36.209l854.495,854.495c24.139,24.14 36.209,52.765 36.209,85.877Z\\\" style=\\\"fill-rule:nonzero;\\\"/>\\r\\n                    </svg>\\r\\n                </span>\\r\\n            </button>\\r\\n            <button class=\\\"group-button__button button button--small-icon\\\" type=\\\"button\\\" (click)=\\\"last()\\\" [disabled]=\\\"(!data.response.num_pages || !data.response.next_page_number)  || isPending.state\\\">\\r\\n                <span class=\\\"button__icon icon icon--baseline\\\">\\r\\n                    <svg class=\\\"icon__svg\\\" version=\\\"1.1\\\"viewBox=\\\"0 0 2134 2134\\\"  xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n                        <path d=\\\"M144.219,2025.86c-16.081,16.08 -29.623,21.583 -40.628,16.507c-11.005,-5.075 -16.507,-18.618 -16.507,-40.628l0,-1870.3c0,-22.01 5.502,-35.552 16.507,-40.628c11.005,-5.075 24.547,0.427 40.628,16.507l902.136,902.137c7.637,7.637 13.14,15.677 16.508,24.121l0,-902.137c0,-22.01 5.502,-35.552 16.507,-40.628c11.005,-5.075 24.547,0.427 40.628,16.507l902.136,902.137c16.081,16.08 24.121,35.149 24.121,57.206c0,22.057 -8.04,41.126 -24.121,57.207l-902.136,902.136c-16.081,16.081 -29.623,21.583 -40.628,16.508c-11.005,-5.076 -16.507,-18.619 -16.507,-40.628l0,-902.137c-3.368,8.491 -8.871,16.531 -16.508,24.121l-902.136,901.994l0,-0.002Z\\\" />\\r\\n                    </svg>\\r\\n                </span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"pagination__layout\\\" (change)=\\\"pageCountChange($event.target.value)\\\">\\r\\n        <select class=\\\"select\\\">\\r\\n            <option value=\\\"10\\\">10</option>\\r\\n            <option value=\\\"50\\\">50</option>\\r\\n            <option value=\\\"100\\\">100</option>\\r\\n            <option value=\\\"1000\\\">1000</option>   \\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"pagination__layout\\\">\\r\\n        <button class=\\\"button\\\" type=\\\"button\\\" (click)=\\\"reload()\\\" [disabled]=\\\"isPending.state\\\">\\r\\n            <span class=\\\"button__icon icon icon--baseline\\\">\\r\\n                <svg class=\\\"icon__svg\\\" viewBox=\\\"0 0 2134 2134\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n                    <path id=\\\"refresh\\\" d=\\\"M2008.69,1269.54c0,4.212 -0.426,7.17 -1.278,8.874c-54.1,226.528 -167.364,410.15 -339.792,550.866c-172.428,140.716 -374.438,211.074 -606.031,211.074c-123.392,0 -242.786,-23.239 -358.18,-69.719c-115.393,-46.479 -218.292,-112.838 -308.695,-199.075l-163.577,163.577c-16.045,16.045 -35.072,24.068 -57.082,24.068c-22.009,0 -41.036,-8.023 -57.081,-24.068c-16.045,-16.045 -24.068,-35.073 -24.068,-57.082l0,-567.976c0,-21.962 8.023,-40.989 24.068,-57.082c16.045,-16.092 35.072,-24.115 57.081,-24.068l567.977,0c21.961,0 40.989,8.023 57.081,24.068c16.093,16.046 24.116,35.073 24.068,57.082c-0.047,22.009 -8.07,41.036 -24.068,57.082l-173.658,173.658c60.016,55.804 128.055,98.899 204.116,129.286c76.062,30.387 155.081,45.604 237.059,45.651c113.264,0 218.908,-27.476 316.931,-82.428c98.023,-54.951 176.617,-130.587 235.781,-226.906c9.277,-14.389 31.665,-63.826 67.163,-148.313c6.769,-19.453 19.453,-29.18 38.055,-29.18l243.448,0c10.981,0 20.495,4.024 28.541,12.07c8.047,8.046 12.07,17.56 12.07,28.541l0.071,0Zm31.735,-1014.26l0,567.976c0,21.962 -8.022,40.989 -24.068,57.082c-16.045,16.093 -35.072,24.115 -57.081,24.068l-567.976,0c-21.962,0 -40.989,-8.023 -57.082,-24.068c-16.093,-16.045 -24.115,-35.073 -24.068,-57.082c0.047,-22.009 8.07,-41.036 24.068,-57.081l174.937,-174.937c-125.097,-115.772 -272.582,-173.659 -442.454,-173.659c-113.264,0 -218.907,27.476 -316.931,82.428c-98.023,54.952 -176.617,130.587 -235.781,226.906c-9.277,14.389 -31.664,63.827 -67.163,148.313c-6.768,19.453 -19.453,29.18 -38.054,29.18l-252.324,0c-10.981,0 -20.494,-4.023 -28.541,-12.07c-8.046,-8.046 -12.069,-17.559 -12.069,-28.54l0,-8.875c54.952,-226.528 169.044,-410.15 342.277,-550.866c173.232,-140.716 376.071,-211.074 608.515,-211.074c123.393,0 243.402,23.453 360.026,70.358c116.625,46.905 220.162,113.051 310.612,198.437l164.784,-163.578c16.046,-16.045 35.073,-24.068 57.082,-24.068c22.009,0 41.036,8.023 57.081,24.068c16.046,16.046 24.068,35.073 24.068,57.082l0.142,0Z\\\" style=\\\"fill-rule:nonzero;\\\"/>\\r\\n                </svg>\\r\\n            </span>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../../services';\r\nimport { Data } from '../../models';\r\n\r\n@Component({\r\n    selector: 'pagination',\r\n    templateUrl: './pagination.component.html',\r\n\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n    @Input() public url: string;\r\n    @Input() public data: Data = new Data();\r\n    @Input() public selectedRow: any[] = [];\r\n    @Input() public isPending: {state: boolean} = {state: false};\r\n    private defaultCountOnPage: number = 10;\r\n\r\n    constructor(\r\n        public dataService: DataService\r\n    ) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.dataService.setCountOnPage(this.defaultCountOnPage);\r\n    }\r\n\r\n    public pageCountChange(e) {\r\n        this.dataService.setCountOnPage(e);\r\n        this.reload();\r\n    }\r\n\r\n    /**\r\n     * Get first page\r\n     */\r\n    public first(): void {\r\n       \r\n        this.isPending.state = true;\r\n\r\n        this.dataService.first(this.url, '').subscribe((res) => {\r\n            this.data.response = res;\r\n            this.isPending.state = false;\r\n        },\r\n        (err) => {\r\n            this.isPending.state = false;\r\n            this.data = new Data();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get previous page\r\n     */\r\n    public prev(): void {\r\n        this.isPending.state = true;\r\n\r\n        if (this.data.response.previous_page_number) {\r\n            this.dataService.prev(this.url, this.data.response.previous_page_number, '').subscribe((res) => {\r\n                this.data.response = res;\r\n                this.isPending.state = false;\r\n            },\r\n            (err) => {\r\n                this.isPending.state = false;\r\n                this.data = new Data();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get next page\r\n     */\r\n    public next(): void {\r\n        this.isPending.state = true;\r\n\r\n        if (this.data.response.next_page_number) {\r\n            this.dataService.next(this.url, this.data.response.next_page_number, '').subscribe((res) => {\r\n                this.data.response = res;\r\n                this.isPending.state = false;\r\n            },\r\n            (err) => {\r\n                this.isPending.state = false;\r\n                this.data = new Data();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get next page\r\n     */\r\n    public last(): void {\r\n        this.isPending.state = true;\r\n\r\n        if (this.data.response.num_pages) {\r\n            this.dataService.next(this.url, this.data.response.num_pages, '').subscribe((res) => {\r\n                this.data.response = res;\r\n                this.isPending.state = false;\r\n            },\r\n            (err) => {\r\n                this.isPending.state = false;\r\n                this.data = new Data();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Realod current page\r\n     */\r\n    public reload(): void {\r\n        this.isPending.state = true;\r\n\r\n        this.dataService.reload(this.url, '').subscribe((res) => {\r\n            this.data.response = res;\r\n            this.isPending.state = false;\r\n            this.selectedRow.splice(0, this.selectedRow.length);\r\n        },\r\n        (err) => {\r\n            this.isPending.state = false;\r\n            this.data = new Data();\r\n            this.selectedRow.splice(0, this.selectedRow.length);\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n    GridComponent,\r\n    TemplateProvider,\r\n    TemplateWrapper,\r\n    PaginationComponent\r\n} from './components';\r\n\r\nimport {\r\n    Utils\r\n} from './utils';\r\nimport { ActionComponent, DescriptionTemplate, DetailComponent, ParticipantInfoComponent, LabelsTemplate, OwnerInfoTemplate, AccountsComponent, AccountsDetailComponent, AccountLabelsTemplate, AccountDateTemplate, OwnerDetailComponent, PostsTemplate, MemberStatusComponent, PostStatusComponent, BotStatusTemplate, EndDateTemplate, RepostComponent } from './templates';\r\nimport { ParticipantsTemplate } from './templates/participants.template';\r\nimport { DateTemplate } from './templates/date.template';\r\nimport { FilterService, FilterDataService, FilterComponent } from './components/filter';\r\n\r\n@NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      FormsModule\r\n    ],\r\n    providers: [\r\n        Utils,\r\n        FilterService,\r\n        FilterDataService,\r\n    ],\r\n    declarations: [\r\n        GridComponent,\r\n        PaginationComponent,\r\n        TemplateProvider,\r\n        TemplateWrapper,\r\n        // Grid templates\r\n        ActionComponent,\r\n        DescriptionTemplate,\r\n        ParticipantsTemplate,\r\n        DateTemplate,\r\n        DetailComponent,\r\n        ParticipantInfoComponent,\r\n        LabelsTemplate,\r\n        OwnerInfoTemplate,\r\n        AccountsComponent,\r\n        AccountsDetailComponent,\r\n        AccountLabelsTemplate,\r\n        AccountDateTemplate,\r\n        OwnerDetailComponent,\r\n        PostsTemplate,\r\n        MemberStatusComponent,\r\n        PostStatusComponent,\r\n        FilterComponent,\r\n        BotStatusTemplate,\r\n        EndDateTemplate,\r\n        RepostComponent\r\n    ],\r\n    exports: [\r\n        GridComponent\r\n    ],\r\n    entryComponents: [\r\n        // Grid templates\r\n        ActionComponent,\r\n        DescriptionTemplate,\r\n        ParticipantsTemplate,\r\n        DateTemplate,\r\n        DetailComponent,\r\n        ParticipantInfoComponent,\r\n        LabelsTemplate,\r\n        OwnerInfoTemplate,\r\n        AccountsComponent,\r\n        AccountsDetailComponent,\r\n        AccountLabelsTemplate,\r\n        AccountDateTemplate,\r\n        OwnerDetailComponent,\r\n        PostsTemplate,\r\n        MemberStatusComponent,\r\n        PostStatusComponent,\r\n        BotStatusTemplate,\r\n        EndDateTemplate,\r\n        RepostComponent\r\n    ]\r\n  })\r\n\r\n  export class GridModule {}\r\n","export * from './grid.module';\r\n","export class Data {\r\n    public response: {\r\n        notFound: boolean\r\n        count: number;\r\n        next: string;\r\n        next_page_number: number;\r\n        num_pages: number;\r\n        page_size: number;\r\n        previous: string;\r\n        previous_page_number: number;\r\n        pagenum: number;\r\n        results: any[];\r\n    };\r\n\r\n    constructor() {\r\n        this.response = {\r\n            notFound: false,\r\n            count: null,\r\n            next: null,\r\n            next_page_number: null,\r\n            num_pages: null,\r\n            page_size: null,\r\n            previous: null,\r\n            previous_page_number: null,\r\n            pagenum: null,\r\n            results: []\r\n        };\r\n    }\r\n}\r\n","export * from './data';\r\nexport * from './gridTemplate';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    public countOnPage: number = 10;\r\n    constructor(\r\n        public http: HttpClient\r\n    ) { }\r\n\r\n    public setCountOnPage(count) {\r\n        this.countOnPage = count;\r\n    }\r\n\r\n    public get(url: string, filters?: string, page?: any): Observable<any> {\r\n        return this.http.get(`${url}${this.generetaUrlParams(filters, page)}`)\r\n            .pipe(\r\n                map((r: any) => {\r\n                    if (r.results.length === 0) {\r\n                        r.notFound = true;\r\n                    }\r\n                    return r;\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    public first(url: string, filter: string): Observable<any> {\r\n        return this.get(url, filter, 1);\r\n    }\r\n\r\n    public prev(url: string, prevPage: number, filter: string): Observable<any> {\r\n        return this.get(url, filter, prevPage);\r\n    }\r\n\r\n    public next(url: string, nextPage, filter: string): Observable<any> {\r\n        return this.get(url, filter, nextPage);\r\n    }\r\n\r\n    public reload(url: string, filter: string): Observable<any> {\r\n        return this.get(url, filter);\r\n    }\r\n\r\n    // To-do сделать маппинг индекса сортировки\r\n    public sort(url: string, sort: string, propName: string, filters?: string, page?: any): any {\r\n        let index: string = sort === 'desc' ? '' : '-';\r\n\r\n        return this.http.get(`${url}${this.generetaUrlParams(filters, page)}&ordering=${index}${propName}`)\r\n            .pipe((response) => {\r\n                return response;\r\n            });\r\n    }\r\n\r\n    private generetaUrlParams(filter: string, page: number): string {\r\n        let urlParam: any = `?page_size=${this.countOnPage}&`;\r\n\r\n        if (filter) {\r\n            urlParam = urlParam + filter;\r\n\r\n            urlParam = page ? urlParam + '&' : urlParam;\r\n        }\r\n\r\n        if (page) {\r\n            urlParam = urlParam + `page=${page}`;\r\n        }\r\n\r\n        return urlParam;\r\n    }\r\n}\r\n","export * from './data.service';\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"field\">\r\n            <div class=\"field__item\">\r\n                {{ data.created_date | date:'medium' }}\r\n            </div>\r\n            <div class=\"field__item\">\r\n                <span class=\"sub-text--primary\"></span>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class AccountDateTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n}\r\n","\r\nimport { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `<div *ngFor=\"let account of data.accounts\">\r\n            <div class=\"field\" *ngFor=\"let detail of account.detailed_labels\">\r\n                <div class=\"field__label field__label--pink\">\r\n                    {{detail?.label?.name}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `\r\n})\r\nexport class AccountLabelsTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel__layout\">\r\n            <div class=\"field\">\r\n                <div class=\"field__button\"  *ngFor=\"let account of data.accounts\">\r\n                    <button class=\"button\" [disabled]=\"isDisabled()\" (click)=\"callback.detail(account)\" type=\"button\">\r\n                        Детали\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class AccountsDetailComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public isDisabled() {\r\n        return false;\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel__layout\" >\r\n            <div class=\"screenshot-viewer__body\">\r\n                <div class=\"screenshot-viewer__item\">\r\n                    <div class=\"screenshot-viewer__field field\">\r\n                        <div class=\"field__layout\">\r\n                            <span class=\"sub-text--secondary\"></span>\r\n                        </div>\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item \">\r\n                               <span class=\"sub-text bold\">{{ data.task_type.platform.name }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                Id: {{ data.entity_id }}\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                Имя: {{ data.entity_id }}\r\n                            </div>\r\n                        </div>-->\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                <a class=\"link link--\" [href]=\"data.url\" target=\"_blank\">{{ data.url }} </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class AccountsComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel align-right\">\r\n            <div class=\"panel__layout shrink\">\r\n                <button class=\"button button--small-icon\" (click)=\"callback.edit(data)\" type=\"button\">\r\n                    <span class=\"button__icon icon icon--baseline\">\r\n                        <svg class=\"icon__svg\" viewBox=\"0 0 2134 2134\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g transform=\"matrix(72.4606,0,0,72.4606,86.4919,-106.29)\">\r\n                                <path id=\"pencil\" d=\"M6.482,27.429L8.107,25.804L3.911,21.608L2.286,23.233L2.286,25.144L4.572,25.144L4.572,27.43L6.483,27.43L6.482,27.429ZM15.821,10.857C15.821,10.595 15.69,10.464 15.428,10.464C15.309,10.464 15.207,10.506 15.124,10.589L5.445,20.268C5.362,20.351 5.32,20.453 5.32,20.572C5.32,20.834 5.451,20.965 5.713,20.965C5.832,20.965 5.934,20.923 6.017,20.84L15.696,11.161C15.779,11.078 15.821,10.976 15.821,10.857L15.821,10.857ZM14.857,7.429L22.286,14.858L7.429,29.715L0,29.715L0,22.286L14.857,7.429ZM27.054,9.143C27.054,9.774 26.834,10.309 26.393,10.75L23.429,13.714L16,6.285L18.964,3.339C19.393,2.886 19.928,2.66 20.571,2.66C21.202,2.66 21.743,2.886 22.196,3.339L26.392,7.518C26.833,7.982 27.053,8.524 27.053,9.143L27.054,9.143Z\" style=\"fill-rule:nonzero;\"/>\r\n                            </g>\r\n                        </svg>\r\n                    </span>\r\n                </button>\r\n            </div>\r\n            <div class=\"panel__layout shrink\">\r\n                <button class=\"button button--small-icon\" (click)=\"callback.remove(data)\" type=\"button\">\r\n                    <span class=\"button__icon icon icon--baseline\">\r\n                        <svg class=\"icon__svg\" viewBox=\"0 0 2134 2134\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g transform=\"matrix(92.1348,0,0,92.1348,-91.6518,-512.8)\">\r\n                                <path id=\"remove\" d=\"M23.179,23.607C23.179,24.083 23.012,24.488 22.679,24.821L20.25,27.25C19.917,27.583 19.512,27.75 19.036,27.75C18.56,27.75 18.155,27.583 17.822,27.25L12.572,22L7.322,27.25C6.989,27.583 6.584,27.75 6.108,27.75C5.632,27.75 5.227,27.583 4.894,27.25L2.465,24.821C2.132,24.488 1.965,24.083 1.965,23.607C1.965,23.131 2.132,22.726 2.465,22.393L7.715,17.143L2.465,11.893C2.132,11.56 1.965,11.155 1.965,10.679C1.965,10.203 2.132,9.798 2.465,9.465L4.894,7.036C5.227,6.703 5.632,6.536 6.108,6.536C6.584,6.536 6.989,6.703 7.322,7.036L12.572,12.286L17.822,7.036C18.155,6.703 18.56,6.536 19.036,6.536C19.512,6.536 19.917,6.703 20.25,7.036L22.679,9.465C23.012,9.798 23.179,10.203 23.179,10.679C23.179,11.155 23.012,11.56 22.679,11.893L17.429,17.143L22.679,22.393C23.012,22.726 23.179,23.131 23.179,23.607Z\" style=\"fill-rule:nonzero;\"/>\r\n                            </g>\r\n                        </svg>\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class ActionComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel__layout\">\r\n            <span class=\"sub-text sub-text--{{getColorReason(data?.auth_status?.code)}}\">\r\n                {{data?.auth_status?.name}}\r\n            </span>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class BotStatusTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public getColorReason(color: string) {\r\n        switch (color) {\r\n            case 'crawler_error':\r\n                return 'alert';\r\n            case 'authorized':\r\n                return 'success';\r\n            case 'waiting_for_code':\r\n                return 'warning';\r\n            default:\r\n                return 'secondary';\r\n        }\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template: \r\n    `\r\n        <div class=\"field\">\r\n\r\n            <div class=\"field__item\">\r\n                <span class=\"sub-text sub-text--secondary sub-text--nowrap\"> {{ data.created_date | date:'medium' }} </span>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class DateTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n    `\r\n        <div class=\"field\">\r\n            <div class=\"field__title\">\r\n                <span class=\"sub-text\">{{data.crw_title}}</span>\r\n            </div>\r\n            <div class=\"field__item field__item--large-mb\">\r\n                <a class=\"link link--\" [href]=\"data.crw_url\" target=\"_blank\">{{data.crw_url?.length > 80 ? data.crw_url.slice(0,80) + '...' : data.crw_url}}</a>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class DescriptionTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel align-right\">\r\n            <div class=\"panel__layout shrink\">\r\n                <button class=\"button\" [disabled]=\"isDisabled()\" (click)=\"callback.detail(data)\" type=\"button\">\r\n                    Детали\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class DetailComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public isDisabled() {\r\n        return false;\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template: \r\n    `\r\n        <div class=\"field\">\r\n\r\n            <div class=\"field__item\">\r\n                <span class=\"sub-text sub-text--secondary sub-text--nowrap\"> {{ data.done_date | date:'medium' }} </span>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class EndDateTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n}\r\n","export * from './action.template';\r\nexport * from './description.template';\r\nexport * from './participants.template';\r\nexport * from './date.template';\r\nexport * from './end-date.template';\r\nexport * from './detail.template';\r\nexport * from './participant-info.template';\r\nexport * from './labels.template';\r\nexport * from './owner-info.template';\r\nexport * from './accounts.template';\r\nexport * from './accounts-detail.template';\r\nexport * from './account-labels.template';\r\nexport * from './account-date.template';\r\nexport * from './owner-detail.template';\r\nexport * from './posts-template';\r\nexport * from './post-status.template';\r\nexport * from './member-status.template';\r\nexport * from './bot-status.template';\r\nexport * from './repost-action.template';\r\n","\r\nimport { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n            <div class=\"field\" *ngFor=\"let detail of data.detailed_labels\">\r\n                <div class=\"field__label field__label--pink\">\r\n                    {{detail?.label?.name}}\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <button class=\"button button--primary\" (click)=\"callback.addLabel(data)\">+</button>\r\n            </div>\r\n        `\r\n})\r\nexport class LabelsTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel__layout\">\r\n            <span class=\"sub-text sub-text--{{getColorReason(data.members_grab_status?.code)}}\">\r\n                {{data.members_grab_status?.name || 'Не начато'}}\r\n            </span>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class MemberStatusComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public getColorReason(color: string) {\r\n        switch (color) {\r\n            case 'error':\r\n                return 'alert';\r\n            case 'done':\r\n                return 'success';\r\n            case 'in_progress':\r\n                return 'warning';\r\n            default:\r\n                return 'secondary';\r\n        }\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel align-right\">\r\n            <button class=\"button button--primary\" (click)=\"callback.owner(data)\">Данные сбора</button>\r\n        </div>\r\n    `\r\n})\r\nexport class OwnerDetailComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public isDisabled() {\r\n        return false;\r\n    }\r\n}\r\n","\r\nimport { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"field\">\r\n            <div class=\"field__item\">\r\n                <span class=\"sub-text\"> {{ data.performer.email }} </span>\r\n            </div>\r\n            <div class=\"field__item\">\r\n                <span class=\"sub-text sub-text--secondary sub-text--nowrap\"> {{ data.start_date | date:'medium' }} </span>\r\n            </div>\r\n        </div>\r\n        `\r\n})\r\nexport class OwnerInfoTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel__layout\">\r\n            <div class=\"screenshot-viewer__body\">\r\n                <div class=\"screenshot-viewer__item\">\r\n                    <div class=\"screenshot-viewer__field field\">\r\n                        <div class=\"field__layout\">\r\n                            <span class=\"sub-text--secondary\">{{data?.crw_fullname}}</span>\r\n                        </div>\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                <span class=\"sub-text sub-text--primary\">{{data?.crw_name}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                Id: {{data.crw_id}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                Url: <a class=\"link link--\" [href]=\"data.crw_url\" target=\"_blank\">&nbsp;{{ data.crw_url }} </a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field__layout\">\r\n                            <div class=\"screenshot-viewer__item\">\r\n                                Псевдоним: {{data.crw_screen_name ? data.crw_screen_name : 'Не указано'}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class ParticipantInfoComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"field\">\r\n            <div class=\"field__item\">\r\n            <span class=\"sub-text sub-text--primary bold\">{{data.members_count}}</span> / <span class=\"sub-text sub-text--success bold\">{{data.labeled_members_count}}</span>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class ParticipantsTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel__layout\">\r\n            <span class=\"sub-text sub-text--{{getColorReason(data.posts_grab_status?.code)}}\">\r\n                {{data.posts_grab_status?.name || 'Не начато'}}\r\n            </span>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class PostStatusComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public getColorReason(color: string) {\r\n        switch (color) {\r\n            case 'error':\r\n                return 'alert';\r\n            case 'done':\r\n                return 'success';\r\n            case 'in_progress':\r\n                return 'warning';\r\n            default:\r\n                return 'secondary';\r\n        }\r\n    }\r\n}\r\n","\r\nimport { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"modal-box__post\">\r\n        <div class=\"modal-box__post--text\">\r\n        {{ data.crw_text }}\r\n        </div>\r\n            <table class=\"table table--small table--tertiary\">\r\n                <tbody class=\"table__tbody\">\r\n                    <tr class=\"table__row\">\r\n                        <td class=\"table__td\">\r\n                            <span class=\"sub-text--secondary\">Автор:</span>\r\n                            <span>{{ data.account?.crw_fullname }}</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"table__row\">\r\n                        <td class=\"table__td\">\r\n                            <span class=\"sub-text--secondary\">Опубликовано:</span>\r\n                            {{ data.crw_published_date | date:'medium' }}\r\n                        </td>\r\n                        <td class=\"table__td\" colspan=\"3\">\r\n                            <span class=\"sub-text--secondary\">Ссылка на пост:</span>\r\n                            <a class=\"link\" [href]=\"'https://www.facebook.com/' + data.crw_id\" target=\"_blank\">{{ 'https://www.facebook.com/' + data.crw_id }}</a>\r\n                        </td>\r\n                   \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        `\r\n})\r\nexport class PostsTemplate implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { GridTemplate } from '../models/gridTemplate';\r\n\r\n@Component({\r\n    template:\r\n        `\r\n        <div class=\"panel align-right\">\r\n            <div class=\"panel__layout shrink\">\r\n                <button class=\"button\" [disabled]=\"isDisabled()\" (click)=\"callback.showReposts(data)\" type=\"button\">\r\n                    Репосты\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class RepostComponent implements GridTemplate {\r\n    @Input() public data: any;\r\n    @Input() public callback: any;\r\n\r\n    public isDisabled() {\r\n        return false;\r\n    }\r\n}\r\n","export class Utils {\r\n    public getValueByPath(item: any, path: string, type: any): string {\r\n        if (path) {\r\n            try {\r\n                let propNames: string[] = path.split('.');\r\n                let value: any;\r\n\r\n                if (propNames.length === 0) {\r\n                    throw new Error();\r\n                }\r\n\r\n                propNames.map((prop) => {\r\n                    item = item[prop];\r\n\r\n                    if (item != undefined) {\r\n                        value = item;\r\n                    } else {\r\n                        type === Number ? value = 0 : value = 'Не указано';\r\n                    }\r\n                });\r\n\r\n                return value;\r\n            } catch (e) {\r\n                console.error('Path parsing error');\r\n            }\r\n        }\r\n    }\r\n\r\n    public contains(array: any[], value: any): boolean {\r\n        let index: number = array.indexOf(value);\r\n\r\n        if (index !== -1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\nimport { ModalState } from './model/modal-state';\r\n\r\n\r\n@Component({\r\n    template: ''\r\n})\r\nexport class ModalBaseComponent {\r\n    private internalState: ModalState = new ModalState(false);\r\n\r\n    @Input() set modalState(modalState) {\r\n        this.hasChangeState(modalState.isOpen);\r\n\r\n        modalState.isOpen ? this.onOpen(modalState.isOpen) : this.onClose(modalState.isOpen);\r\n        this.internalState = modalState;\r\n    }\r\n\r\n    get modalState (): ModalState {\r\n        return this.internalState;\r\n    }\r\n\r\n    public close(): void {\r\n        this.modalState = new ModalState(false);\r\n    }\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    public onOpen(state: boolean): void {};\r\n    // tslint:disable-next-line:no-empty\r\n    public onClose(state: boolean): void {};\r\n    // tslint:disable-next-line:no-empty\r\n    public hasChangeState (state: boolean): void {};\r\n}\r\n","export class ModalState {\r\n    public isOpen: boolean;\r\n    public data?: any;\r\n\r\n    constructor(isOpen: boolean) {\r\n        this.isOpen = isOpen;\r\n    }\r\n}\r\n","export * from './select-field.module';\r\n","import { Component, forwardRef, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { SelectFieldService } from './select-field.service';\r\nimport { AppState, InternalStateType } from '../../../app.service';\r\n\r\nconst noop = () => {};\r\n\r\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => MySelectFieldComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'my-select-field',\r\n    template: `\r\n        <select \r\n            [ngClass]=\"className || 'select'\"\r\n            [(ngModel)]=\"value\"\r\n            [compareWith]=\"byId\"\r\n        >\r\n            <option [ngValue]=\"null\">{{title ? title : 'Выберите значение'}}</option>\r\n            <option [ngValue]=\"object\" *ngFor=\"let object of dataSource\">\r\n                {{object.name}}\r\n            </option>\r\n        </select>\r\n    `,\r\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, SelectFieldService]\r\n})\r\nexport class MySelectFieldComponent implements ControlValueAccessor, OnInit  {\r\n    @Input() public className: string;\r\n    @Input() public placeholder: string;\r\n    @Input() public isDisabled: boolean;\r\n    @Input() public type: string;\r\n    @Input() public title: string;\r\n    public state: InternalStateType;\r\n    public dataSource: any[] = [];\r\n    private innerValue: any = '';\r\n    private onTouchedCallback: () => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    constructor(\r\n        public selectFieldService: SelectFieldService,\r\n        public appState: AppState\r\n\r\n    ) {\r\n        this.state = this.appState.state;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.selectFieldService.get(this.type).subscribe((res) => {\r\n            this.dataSource = res.results;\r\n        });\r\n    }\r\n\r\n    public byId(innerItem, dictionaryItem) {\r\n        return innerItem && dictionaryItem ? innerItem.id === dictionaryItem.id : innerItem === dictionaryItem;\r\n      }\r\n\r\n    get value(): any {\r\n        return this.innerValue;\r\n    };\r\n\r\n    set value(v: any) {\r\n        if (v !== this.innerValue) {\r\n            this.innerValue = v;\r\n            this.onChangeCallback(v);\r\n        }\r\n    }\r\n\r\n    public onBlur() {\r\n        this.onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(value: any) {\r\n        if (value !== this.innerValue) {\r\n            this.innerValue = value;\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MySelectFieldComponent } from './select-field.component';\r\nimport { SelectFieldService } from './select-field.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MySelectFieldComponent\r\n    ],\r\n    providers: [\r\n        SelectFieldService\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n    ],\r\n    exports: [\r\n        MySelectFieldComponent\r\n    ],\r\n  })\r\n\r\n  export class SelectFiledModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { CustomHttpParams } from '../../../core/custom-http-params';\r\n\r\n@Injectable()\r\nexport class SelectFieldService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public get(url: string): Observable<any> {\r\n        return this.http.get(`/${url}`, {\r\n            params: new CustomHttpParams(true)\r\n        }).pipe(\r\n            map((response: Response) => {\r\n                return response;\r\n            })\r\n        );\r\n    }\r\n}\r\n","export * from './tabs.base.component';\r\n","module.exports = \"<div class=\\\"layout__block layout__block--content\\\">\\r\\n    <div class=\\\"layout__block shrink\\\">\\r\\n        <div class=\\\"nav-sub\\\">\\r\\n            <div class=\\\"nav-sub__layout\\\">\\r\\n                <div class=\\\"nav-sub__title\\\">\\r\\n                    <span class=\\\"bold\\\">Этапы обработки:</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"nav-sub__layout\\\">\\r\\n                <a class=\\\"nav-sub__link\\\" [ngClass]=\\\"{'nav-sub__link--active': active == 'new'}\\\" routerLink=\\\"/main/new\\\">\\r\\n                    <span class=\\\"bold\\\">Новое:\\r\\n                        <span class=\\\"sub-text--secondary\\\">{{state?.new?.count}}</span>\\r\\n                    </span>\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"nav-sub__layout\\\">\\r\\n                <a class=\\\"nav-sub__link\\\" [ngClass]=\\\"{'nav-sub__link--active': active == 'inWork'}\\\" routerLink=\\\"/main/in-work\\\">\\r\\n                    <span class=\\\"bold\\\">В работе:\\r\\n                        <span class=\\\"sub-text--secondary\\\">{{state?.inProcess?.count}}</span>\\r\\n                    </span>\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"nav-sub__layout\\\">\\r\\n                <a class=\\\"nav-sub__link\\\" [ngClass]=\\\"{'nav-sub__link--active': active == 'ready'}\\\" routerLink=\\\"/main/ready\\\">\\r\\n                    <span class=\\\"bold\\\">Отработано:\\r\\n                        <span class=\\\"sub-text--secondary\\\">{{state?.ready?.count}}</span>\\r\\n                    </span>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-content></ng-content>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TabsBaseComponent } from '../tabs.base.component';\r\n\r\n@Component({\r\n    selector: 'main-tabs',\r\n    templateUrl: './main.tabs.component.html'\r\n})\r\nexport class MainTabsComponent extends TabsBaseComponent implements OnInit {\r\n    public ngOnInit(): void {\r\n        this.getCounters();\r\n    }\r\n\r\n    getCounters(): void {\r\n        this.dataService.get('tasks/scrolling_new/count').subscribe((e) => {\r\n            this.state.new = e;\r\n        });\r\n        this.dataService.get('tasks/scrolling_in_precess/count').subscribe((e) => {\r\n            this.state.inProcess = e;\r\n        });\r\n        this.dataService.get('tasks/scrolling_done/count').subscribe((e) => {\r\n            this.state.ready = e;\r\n        });\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { TabService } from '../service';\r\nimport { AppState } from '../../../../app.service';\r\n\r\n@Component({\r\n    template: ''\r\n})\r\nexport class TabsBaseComponent {\r\n    @Input() public active: string;\r\n    @Input() public data: any;\r\n    public state: any;\r\n\r\n\r\n    constructor(\r\n        public dataService: TabService,\r\n        public appState: AppState\r\n    ) {\r\n        this.state = this.appState.state;\r\n    }\r\n}\r\n","export * from './tab.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TabService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    get(url: string): Observable<any> {\r\n        return this.http.get(url);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TabService } from './service';\r\nimport { MainTabsComponent } from './components/main-tabs/main.tabs.component';\r\nimport { TabsBaseComponent } from './components';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MainTabsComponent,\r\n        TabsBaseComponent\r\n    ],\r\n    providers: [\r\n        TabService,\r\n        MainTabsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        RouterModule,\r\n\r\n    ],\r\n    exports: [\r\n        MainTabsComponent\r\n    ],\r\n  })\r\n\r\n  export class TabModule {}\r\n","export const notifierConfig: any = {\r\n    position: {\r\n        horizontal: {\r\n            position: 'right',\r\n            distance: 12\r\n        }\r\n    },\r\n    behaviour: {\r\n        autoHide: 3000,\r\n        onClick: 'hide',\r\n        showDismissButton: false\r\n    }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotifierModule } from 'angular-notifier';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { TabModule } from './components/tabs/tab.module';\r\nimport { GridModule } from './components/grid';\r\nimport { ModalBaseComponent } from './components/modal/modal.base.component';\r\nimport { SelectFiledModule } from './components/select-field';\r\nimport { ActionButtonComponent } from './components/action-button/action-button.component';\r\nimport { notifierConfig } from './notifier.config';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ModalBaseComponent,\r\n        ActionButtonComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        TabModule,\r\n        GridModule,\r\n        SelectFiledModule,\r\n        NotifierModule.withConfig(notifierConfig)\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        TabModule,\r\n        GridModule,\r\n        SelectFiledModule,\r\n        ModalBaseComponent,\r\n        ActionButtonComponent,\r\n        NotifierModule\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n"],"sourceRoot":""}